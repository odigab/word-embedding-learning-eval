%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 11.0.0%%For: (Publishing Services) (ACT Urban Services)%%Title: (ACTGov_Logo_Black.eps)%%CreationDate: 2/23/06 2:22 PM%%BoundingBox: 177 302 439 564%%HiResBoundingBox: 177.4692 302.4414 438.4688 563.4409%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_screens_AI5 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKCustomColor: 0.9373 0.5882 0.0314 0 (PANTONE 293 C)%%CMYKProcessColor: 0 0 0 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 298.5 420.3887 298.5 420.3887%AI3_TileBox: 14.3584 14.1045 580.998 827.7041%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 595.276 841.89%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -288 907.8887 1.5 1908 1107 26 0 0 6 42 0 0%AI5_OpenViewLayers: 7%%PageOrigin:14 14%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI7_Thumbnail: 128 128 8%%BeginData: 14626 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD35FFA87D52522727FD09F8272752527D7DA8A8FD64FFA87D2727%FD19F8527DA8A8FD5CFF7D52FD21F827277DA8FD56FF7D52FD28F8277DA8%FD50FFA852FD2DF82752A8FD4CFF7D27FD32F8277DFD48FF7D27FD37F87D%FD44FF7DFD3BF8277DFD40FFA827FD3EF827A8FD3DFF52FD42F852A8FD39%FF7DFD45F8277DFD36FFA852FD48F827FD34FF7D27FD1FF8272752527D7D%7DFD04522727FD1FF8A8FD31FF52FD1BF8275252A8A8FD0DFFA8FF7D7D52%27FD1BF87DFD2FFF27FD18F827527DA8FD19FF7D52FD19F852FD2DFF27FD%16F82752A8A8FD1FFF7D52FD17F827A8FD2AFFFD16F827A8FD26FF7D27FD%15F827A8FD27FFA8FD15F8527DFD2AFFA827FD15F8A8FD25FFA8FD14F827%A8FD16FF7D7DFD16FFA852FD14F8A8FD23FFA8FD13F8277DFD18FF27F8FD%18FF7DFD14F8A8FD22FFFD13F87DFD18FF7D52F827277DFD18FF52FD12F8%27A8FD20FFFD12F827A8FD17FF7DFD08F852FD17FFA827FD11F827A8FD1E%FF27FD11F852FD18FF52F827A8FF2727FFFF27F827FD18FF52FD11F827FD%1DFF27FD11F87DFD18FF52F8527DA8A827F8A8A8A87DF827FD18FF7DFD11%F852FD1BFF7DFD10F827A8FD19FF52F8FF52F852F8F8522727FF2752FD1A%FF27FD10F87DFD19FF7DFD10F827A8FD1BFFF85227F827F8F852F82752F8%A8FD1BFF27FD10F8A8FD18FF27FD0FF827FD1DFF7DFD05F827FD04F827FD%1DFF27FD10F8FD17FF52FD0FF827FD1AFFA8A87DA852F8F827527D525227%27F8527DA87DA8FD1AFF27FD0FF827FD15FFA8FD0FF852FD1BFFA8FD07F8%27F8F8F827FD06F852FD1BFF27FD0FF87DFD14FFFD0FF827FD1CFFA827F8%F827A8A852F8A8A852F8A8A852F827F87DFD1CFF27FD0FF8A8FD12FF52FD%0EF827FD1EFFF87D2752FFFF522727522727FFFF7D277D277DFD1DFFFD0F%F852FD11FF7DFD0FF8A8FD1DFF7D277D5227FF5227F8F8F8272752A87DF8%A8277DFD1DFFA8FD0FF8A8FD10FF27FD0EF87DFD1EFFA8F8A852527DFD06%275227527D27FF2752FD1EFFA8FD0EF827FD0FFF7DFD0EF852FD1FFF7D27%7D52F8272727F8272727F8FD0427FF2752FD1FFF52FD0EF87DFD0EFF27FD%0DF827FD20FF7DF8A852F8F827F8F82727F8F82727F827FF2727FD20FF27%FD0DF827FD0DFF52FD0EF8A8FD20FF5227A85227FF2727F8522727F8527D%7DF8FF2752A8FD1FFFA8FD0EF87DFD0CFF27FD0DF87DFD0BFFA87DA8A8FD%12FF7D27FF5252FFA82727F8F827277DFF7D27FF5227FD13FF7D7D7DA8FD%0AFF52FD0DF827FD0BFF7DFD0DF827FD0AFF5227FD05F8527DFD0FFF5227%A85227FFFF7DF827F85227FFFF7DF8FF5227A8FD0FFF5227275252522727%7DFD09FFFD0EF87DFD0AFF27FD0DF87DFD09FF52FD09F827A8FD0DFF5227%FF5252FFFF5227277D5227FFFF7D27FF7D27FD0EFF7D2752A8FD05FFA827%52FD08FFA8FD0DF827FD09FF7DFD0DF827FD09FF52FD04F8272727FD05F8%52A8FD0BFF2752FF52FD0DF8FF52277DFD0BFF7D2727FFFFFF7D7D527DA8%FFFF277DFD08FF27FD0DF8A8FD08FF52FD0DF8A8FD09FF27F8F827FD05FF%52FD05F852FD09FFA82752FF5227527D2727527D2727527D2727FFA8277D%FD09FFA82752A8FFFF7D27527D7D5227A8FFA827FD08FFA8FD0DF852FD08%FFFD0DF852FD09FFA8F8F8F8A8FD06FF7DFD05F827FD08FF7DF8A8FF27F8%FFFF27F8FFFF52F8FFFF52F8A8FF5227FD08FF7DF8A8FFFFFF5227A8FD04%FF7D27FFFF27A8FD08FF27FD0DF8A8FD06FF7DFD0DF87DFD09FF7DF8F827%FD08FFA8FD05F852FD06FFA8F852FFFF2752FFFF5252FFFF5227FFFF7D27%FFFF7D2752FD07FF27FD04FF7D52FD07FF27A8FF7D52FD08FFA8FD0DF87D%FD06FF52FD0CF827FD0AFF7DF8F8F87DFD04FF522727FF52FD04F827A8FD%05FF27277D7D5227F8272727F8272727F8272727F85227A827277DFD05FF%527DFFFFFFA8F852275252FFFFFFA827A8FF527DFD09FF27FD0CF827FD06%FFFD0DF87DFD0AFFA8FD04F8A8FFFF27FD04F8A827FD04F8FFFFFF527D52%27F87DFD12F82752F8277D7D7DFFFF52A8FFFFFF27F852FFA85227FFFF52%52FFFF527DFD09FF7DFD0CF827A8FD04FF7DFD0CF827A8FD0BFFFD05F87D%7DFD05F827FF27F8F8F8A8FF5227527D5252527D527D527D527D527D527D%527D527D527D5252527D7D525227A8FF27FFFFA827F852FD04FF52275252%FFFFFF27FD0BFFFD0DF87DFD04FF52FD0CF852FD0CFF7D27522727F82752%5227F8F87DFFFF7DF8F87DFF7D7DFFFFA82752A8FD14FFA8FFFF27FFA852%FF5227A85252A8FFFFA827277DFFFFFF7D52FD0BFF52FD0CF852FD04FFFD%0DF8A8FD0CFFA8FD04527DF8F8F852277DFD04FF7DF8F8FF527DFF52F87D%2727FD11FFA827F827FFFF52A852527D27FFFFFF27277D2727A8A87D2727%27F852FD0BFF7DFD0CF827FFFFFFA8FD0CF827FD0DFF27FD04F8277D27F8%F82727A8FD04FFA8F8A87D7DFF52525227F852A8FD05FFA8FD07FF7D27F8%277DFFFFFF52FF272727FFFFFFA852F852A8FF7D2752FFFFFFA8277DFD0B%FF27FD0CF8A8FFFF7DFD0CF852FD0CFF27FD07F87DFD05F8277DFFFFFFA8%FF527DFF7D277DFD04F827A8FFFFA82727FFFFFFA87DF8F8F8A8FD05FF52%A82727FFFFFF272752FFFFFF7D27A8FD05FFA827A8FD0AFF52FD0CF87DFF%FF52FD0CF8A8FD0BFF7DFD08F85252FD06F852FD04FF7D52FFFF52275227%FD04F8A85227F827F87DA827F8277DFD07FF52FFA8FFFFA8F87DFD05FF52%7DFD07FF7D27FD0AFF7DFD0CF852FFFF27FD0CF8A8FD0AFFA8FD09F85227%FD07F827FFFFFF5252FD06FFA852F852F827A85252FF2727527DFD09FF52%A8FFFFA8F8A8FD06FF27A8FD08FF277DFD09FFA8FD0DF8FFFFFD0CF827FD%0BFF27FD09F87D27FD08F852FFFF7D52FD05FFA87DFFFFA8275252272727%7DF8FD0BFF52FFFFFFF8A8FD07FF527DFD09FF27FD0AFF27FD0BF827FFA8%FD0CF852FD0AFFA8FD09F85252FD0AF87DFF5252FD05FF52F8FFFFFF27FD%06F852FD0BFF52A8FFF8A8FD08FF7D277DFD08FF5252FD09FF52FD0CF8A8%7DFD0CF87DFD0AFF52FD09F8527D52527D5227FD05F827FF7D52FD05FF52%27FF7D2752FD06F852527DFD09FF27FF7D52FD05FFA87DA8A8FF27A8FD08%FFA827FD09FF7DFD0CF87D52FD0CF8A8FD0AFFFD0BF87D27522727FD07F8%A85252FD05FF7DF827F8F8527D7DA8A8A8527DF8F8F87D7DFD06FF52A827%A8FD05FF7D525252F827FD0AFF27A8FD08FF7DFD0CF85252FD0BF827A8FD%09FFA827FD16F87D7D52FD04FF7DF8F8F8527DFD09FF7D27F8F827A8FD04%FF52A827FD0BFFA8FD0AFF7D52FD09FFFD0CF85227FD0CF8FD0AFFA8FD17%F87D7D7DFFFF7D27F8F827F87DFD0BFFA852F8F8F8527DFFFF7D7D52FD16%FF7D7DFD09FF27FD0BF82727FD0BF827FD0AFFA8FD10F827FD06F87DA827%FF7DF8F87DA8FF27F87DFD0DFF7D52F8F87DA8277D52FD05FFA8FD10FF7D%52FD09FF27FD0BF827FD0CF827FD0BFFFD10F82752FD05F87DF852FF7D7D%FD05FF527DFF7D7D7DFF7D7D7DA8FD06FF7D27A87DF8F852FD04FFA852A8%FD0FFF5252FD09FF52FD0BF827FD0CF852FD0BFF52FD0FF85252FD04F827%52F852FD0AFFA8F8F8F852F8F8F8A8FD09FF7D2752F8FD05FF27FD10FF52%7DFD09FF52FD18F852FD0BFF7DFD0FF8277DFD04F8277DF8F827FD09FFA8%FD07F8A8FD08FF27F8A87DF8A8FFFFFFA852FD0FFFA827FD0AFF52FD18F8%7DFD0CFF52FD0EF85252FD04F87D7DF827FFFFFF7D7DA87DA8FFFFFF27FD%06F8FFFFFFA87DA8A87DFFA827A87DF87DFD04FF27FD0FFF277DFD0AFF52%FD18F852FD0CFFA8FD0EF85227FD04F8A87DF87DFFFFA8FD04F87DFFFFFF%52FD05F827FFFFFF7DF827F8F8A8FFFD045227FD04FF527DFD0DFF7D27FD%0BFF7DFD18F87DFD0CFF7D52FD0CF8277DFD04F852FF27F87DFFFFFFFD04%F87DFFFFFF27FD05F827FFFFFF7DFD04F8FFFFFF52A8527D52FFFFFF7D52%FD0DFF2727FD0BFF52FD18F852FD0BFFA8277DFD0CF87D27FD04F8A8FFF8%F87DFFFFFF7DF8F8F852A8277D52FD05F8277D277D52F8F8F852FFFFA852%A8527D52FD04FF27A8FD0BFFA8F827FD0BFF52FD18F852FD0BFF7DF87D27%FD0AF87D52FD05F8FF7DF8F87DFFFFFF52FD15F87DFFFFA852FF527D52FD%04FFA8F8FD0BFF527D527DFD0AFF52FD18F852FD0AFFA8F8F8277DFD09F8%277DFD06F87DF852F852FFFFFF52FD15F852FFFF7D5227522727A8FD04FF%7D27FD0AFF27A8A8F8FD0AFF52FD0CF827FD0BF852FD0AFFF8F8F8277D27%FD08F85252FD07F827A82727FFFFFF52FD15F852FFFF7D2727277D27FD06%FF27A8FD08FFA827FFFF7D27FD09FF27FD0CF827FD0BF827FD09FFFD05F8%7D27FD07F8277DFD08F852FF7D52FFFFFF52FD09F8522752FD09F852FFFF%27F87D7D52FD07FF5252FD08FF527DFFFFFF5227FD08FF27FD0BF82752FD%0BF827FD08FF27FD05F8277DFD07F8A827FD08F8A8FFA852FFFFFF27FD08%F87DA852A852FD08F827FFFFA852FFFF27A8FD07FF277DFD07FF27A8FD04%FF7D27FD07FFFD0CF82727FD0CF8FD07FF52FD07F852FD06F87D27FD08F8%277DFFA852FFFFFF27FD07F852527D277D275227FD06F827FFFFA827FFFF%F87DFD07FFA8F8A8FD05FFA827FFFFFFA8FFFF2752FD05FFA8FD0CF8527D%FD0CF8A8FD07FFA8A87D27F8F8F87D27FD04F85252FD07F827A8FD04FF27%FFFFFFFD07F87D7D7DA852A8527D7DFD07F8A8FF7D52FFFF7D2727A8FD06%FFA827FD05FF527DFFFF7D27275227A8FD05FFA8FD0CF8527DFD0CF87DFD%09FF7DFD04F85252F8F8F8277DFD06F8527DFD06FF527DFF7DFD07F85227%2752F852F8275227FD06F87DFF527DFD04FF7D27277D7DFD04FF5227FD04%FF527DFFFFFF277DFD08FF7DFD0CF87DA8FD0CF852FD09FFFD05F82752F8%F8277D27FD04F8A8FD09FF7D52FFA8FD07F8FF527DFF52FF7D7DFF27FD06%F8A8FF27FD07FF7D525227FD04FF5252FFFFFF27FD05FF27FD08FF52FD0C%F8A8A8FD0CF827FD08FF52FD06F87DF8F8A852FD04F827FD0BFF27FF7DFD%04F827527DFFFFA8FFA8FFA8FFFF7D2727FD04F8A87D52FD0AFF2752FFFF%FFA8F87DFF7D52A8FD04FF5252FD07FFFD0DF8FFFF27FD0CF8FD08FF27F8%F8F827A8A8A8F87DFF52FD04F8FD0CFF7D52FFFD047DA8FD05FF7D27FD06%FFA8FD047DA827FD0BFFA827FFFFFFA82727A8A8F85227A8FFFFA852FD06%FFA827FD0BF827FFFF52FD0CF87DFD07FFFD04F852FFFFFF7DFFFF52F8F8%F87DFD0DFF277DFD09FF527D5252A8FD09FF527DFD0CFF5227FFFF7D7DA8%27F87DFF5252FFFFFF27FD06FF7DFD0CF827FFFF7DFD0CF852FD07FF27F8%F8F8A8FD06FFA8F8F87DFD04FFA87D52A8FD06FFA827A8FD05FFA8A852F8%F87DF827A8FD07FF7D27FD06FFA8A8A8FD05FF2752FF5252FFA852A8FFA8%52FFFFFF27A8FD05FF52FD0CF87DFFFFA8FD0DF8FD07FF7DF8F852FD07FF%A8F852FD05FF52F852272752FFA87D5227F827FD05FFA8F87D272752277D%5227FD05FFA8F8F827277D7DA8FD0527FD04FFA8F87D52A8FD06FF277DFF%5227FD05FFA827FD0CF8A8FFFFFF27FD0CF87DFD07FF7DA8FD08FFA8F87D%FD05FF527DFFFFA852F827FD05F827FD05FFA82727A8FF525252FD05FFA8%27FD07F87DA8FFA852FD05FFA85252A8FD07FF275227FD06FFA8FD0DF8FD%04FF27FD0CF852FD11FFA8F87DFFFFA8FFFF5252FFFFFFA8FD08F827A8FF%FFFFA8F8F8527D27F852FD04FF7DFD08F8A8FFFFFFA827A87DA8FFFF7D7D%527DFD08FFA8FD07FF52FD0CF852FD04FF7DFD0DF8FD11FF7DF852FF2727%F827F87DFD04FF27FD08F8277DFFFFFF527D27F87D52A8FFFFFF52FD09F8%A8FFFFFFA8FD04F82752277D7D52FD10FF27FD0CF87DFD04FFA8FD0DF87D%FD10FF27F8F82752275227F87DFFFFFFA827FD0AF827FFFF522727F852F8%FFFFA8FD0BF8A8FD04FFFD07F8FFA8277DFD0EFF7DFD0DF8A8FD05FF27FD%0CF827FD0DFFA87D27FD07F87D27527DA8FFFF27FD0CF87D7DFD04FF7D7D%52FD0CF8A8FFA8A852F8F87DA8FFA8FFFFFF7DF8F87DFD0CFF27FD0CF852%FD06FF7DFD0DF8A8FD0AFF7D27277D2752FD05F8272752F8F8F87DFF27FD%0DF82752A8A87D27FD0EF8A8A8FD04F827A8FD07FF7DF8F852FD0AFF7DFD%0DF87DFD06FFA827FD0CF827FD08FF7DF8F8F8275227275227F82752277D%52F8F852FFFF27FD21F8A8FF52F8F8F8275227A8FFFF7D27F827F8F8F827%A8FD08FF52FD0DF8FD08FF27FD0DF87DFD05FFA827FD09F8525252FD05F8%7DFFFFFF27FD21F8A8FFFF7D27FD05F87D7DFD09F8A8FD06FFA8FD0DF852%FD08FFA8FD0DF852FD06FF27FD0AF87DF8F827527DFD05FF27FD20F827FD%05FFA85227F8F8F827FD09F87DFD06FF27FD0DF8A8FD09FF27FD0DF87DFD%05FFA8FD0DF852527DFD0552FD22F8FD04527D527D2727FD0CF8A8FD05FF%7DFD0DF827FD0AFF7DFD0DF827FD06FFA8F8277DA87DA87DA87D7D7DA8FD%047D52FD047DA87DA87DA87DA87D7D7DA87DA87DA87D7D7DA87DA87DA87D%A87DA87DA87DA87DA8FD047D52FD047DA87DA87DA87D7D7DA827F87DFD06%FF27FD0DF8A8FD0BFFFD0EF852FD07FF27FF7DFF7DA87DFFFFA87DFFA8A8%7DFFA8A8A8FFFD07A8FFA87D7DFFA8A8A8FFA8FFA8FFA8A8A8FFA8FFA8FF%7D7DFFFF7DA8FFA87DFFFD08A87DFFFFA8A85252FD06FF7DFD0DF827FD0C%FF7DFD0EF8A8FD06FF52A8522752272727FF525227522752FF2727277D27%27522752F852FFFF2752272727A87D7DA8275227F8A8FF5227522752277D%A85252522727A8A8F82727522752F82752FFF8A852A8FD06FFFD0EF87DFD%0DFF27FD0DF827FD06FF27A87DA82752527DFF7D7D7D522727FF52275227%52272727525227A8FF7D7D7D27277DA82752275227277DA8525227522727%7DFF7D7D7D5227A87DA87D2752275252A85252277D527DFD05FF27FD0EF8%FD0EFF7DFD0EF852FD04FFA827FD10FFA8FFA8FFA8FFA8FFFFFFA8FD09FF%A8FD04FFA8A8FD11FFA8FFA8FFFFFFA8FFFFFF52A8FD04FF52FD0EF87DFD%0FFF27FD0EF87DFD04FFF8FD042752275227522752275227272752275227%522752275227522752272727522727275227522752272727522752275227%2727522752275227272752275227522752275227F87DFFFFFF7DFD0EF827%FD10FFA8FD0FF8FD05FFFD47A8FFFFFFA827FD0EF8A8FD11FF52FD0FF8FD%4DFFA827FD0EF852FD12FFA827FD0EF827FD4CFF27FD0FF8FD14FF7DFD0F%F827FD4AFF27FD0FF87DFD15FF52FD0FF827FD48FF27FD0FF852FD17FFFD%10F827FD46FF27FD0FF827A8FD17FFA8FD0AF8277D27F8F8F827FD44FF27%FD10F87DFD19FF7DFD07F8277DFFFFA8FD05F8A8FD40FFA827F8F8F852A8%27FD0AF852FD1BFF52F8F8F82752FFFFA827FF52FD06F8A8FD3EFF7D27F8%F8F852FF7DFD0AF852FD1DFF27F8F827FF7DFF2752A8FD08F852FD3CFF52%FD04F852FFFFFD0AF827FD1FFF27FD04F827FFFF7DF8F852A87D27F8F8F8%27A8FD38FFA827FD04F852FF52A8FFFD09F8FD20FFA8FD05F852FFF8F87D%FF7DA8A827FD04F852FD35FFA87DFD05F8A852F8F8F8A8FFFD07F8A8FD21%FFA827F8F8F8FF7DF87DFF27F8F8A8A8FD06F8A8FD32FF7D27FD06F87DFF%F8F8F827FFFFFD05F8FD24FF7DF8F8F85227F8FF52F8F8F852FFF87DFD05%F8277DFD2EFFA827FD04F8275227F8F8A8A8F8F8F827FF52F8F8F8A8FD25%FFA827F8F8F827FF27F8F8F8275227A8FF52FD05F827A8FD2AFFA852FD05%F8277DFFFFA82727FF7DF8F8F827F8F8F8FD28FFA827F8F8F8A87DF8F827%FD04F8A8FFA827FD05F8277DFD25FFA87D27FD05F827FF7DF8A8A87DFF7D%A8FF27FD05F8A8FD2AFF27F8F827FFA8FFA827F8F827FF527DA8FD08F852%7DFD20FFA85227FD05F8277DFF7D27F852FF52F87DA8FF7DF8F8F827FD2D%FF52F8F8F8525227F8F8F8FFA8FD0EF8527DA8FD18FFA87D5227FD08F8A8%FFF8F82752F87DFF27F8F82727F8F827FD2FFF7DFD07F87DFF27FD06F827%A87D27FD07F827527DA8FD0FFFA8A87D5227FD09F87DFF2752FF527DFF52%F8F8FFA8FD05F87DFD31FFA8FD05F827FF7DFD06F852FF7DA8FF27FD0CF8%27522752527D525227522727FD0BF827F8F8F8FFFF7DF8A8FF7DFD04F827%7DFD04F87DFD34FF52F8F8F827A8FD06F827FF52F8F8A8FFF8F8275252FD%1BF852F8A8FFA8F8F8A8A8FFF827FF27F852FF52FD04F852FD37FF7DFD0A%F8A8A8FD04F87DF827FFFFA8FF27FD14F82727F8F827FF2752FFFF7DF8A8%52FF52F87DFFA8FF52FD04F87DFD3AFF52FD08F8A8A8F827A87DF827FFA8%F8F87DFFF8A87DF8F82752275252527D272752A8A8A852F852FF7DF8F8FF%5227FF7DFF527D527DFFF827FF7DFD04F852FD3DFFA827FD06F87DA8F8F8%52FF5227FFF8F8F827FF277DA8F8F8A8A852FFA8A8A87D27FF7D5252FF52%27FFFF7DF87DA8F8A87D52FFFF2727FF27FD05F8277DFD40FF7D27FD05F8%A8FFA8A8FFF87DA8F8F8F827FF2752FFF827FF2752FF27F8F8F827FF52F8%F8A87DF8FF52FF7D52FFF852FFF87DFF52F852FD04F8277DFD44FF7DFD05%F85252A87DF852FFF8F8F87DFFF827FFF8A8A8F827FF7DA87D27F8FF7D7D%7DFFF8F8A87DF8FFA8FFF8F8FF52F87D27FD04F82752FD48FF7D27FD05F8%27F827A8A8277DFF7DF827FF7DFF52F852FF7D7D7D27F8A8FF7D7DFF7DF8%7DA8F8F8FFFF52F87D52FD05F827A8FD4CFFA827FD06F8277DFFA852F8F8%F8A8FFA8F8F852FFFD05F8A87DF8F87DFFF827FFF8F8F87D27FD06F8527D%FD50FFA87D2727FD0AF87DFF27F8F87DFFA87DA852F8A8FFF8F827FFF827%5227FD07F8527DFD56FFA87D2727FD0CF8277D527D7D52F85227FD0CF852%7DFD5DFFA87D522727FD17F827527DA8FD64FFA8A87D522727FD0BF82727%52527D7DFD34FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (Symbolism)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (Pathfinder Suite)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0 0 0 1 ([Registration]) 0 Xs([Registration]) Pc0.9373 0.5882 0.0314 0 (PANTONE 293 C) 0 x(PANTONE 293 C) PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d0 XR322.5488 471.3818 m327.0117 471.3818 L327.0117 474.8628 L322.5488 474.8628 l322.5488 471.3818 Lfq322.5488 471.3818 m327.0117 471.3818 L327.0117 474.8628 L322.5488 474.8628 l322.5488 471.3818 LhWn0 O0 0 0 1 k327.0117 472.2422 m327.0117 472.2979 327.0078 472.354 327.0059 472.4092 c326.9277 473.4111 326.168 474.3599 325.4785 474.7002 c324.8848 474.9893 323.709 474.8662 322.5488 474.543 c322.8271 474.2002 323.0586 473.856 323.2109 473.5889 C323.373 473.313 L323.6035 472.8062 l323.7637 472.3921 323.9941 471.8369 324.4561 471.3818 C326.7949 471.3818 l326.9277 471.6509 327.0117 471.937 327.0117 472.2422 CFQ0 A0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d0 XR315.3047 471.3818 m323.4795 471.3818 L323.4795 475.1372 L315.3047 475.1372 l315.3047 471.3818 Lfq315.3047 471.3818 m323.4795 471.3818 L323.4795 475.1372 L315.3047 475.1372 l315.3047 471.3818 LhWn0 O0 0 0 1 k322.8867 472.5298 m322.7344 472.8882 L322.543 473.21 l322.3262 473.5942 322.0264 474.1201 321.4746 474.5581 C321.2646 474.708 l320.5869 475.0479 317.4082 475.439 315.3047 474.7759 c315.6895 474.3779 315.9951 473.9458 316.1885 473.6099 c316.3613 473.314 316.3613 473.3101 V316.5889 472.8101 l316.748 472.396 316.9785 471.8369 317.4434 471.3818 C323.4785 471.3818 l323.1836 471.8052 323.002 472.229 322.8867 472.5298 CFQ0 A0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d0 XR308.29 471.3818 m316.4629 471.3818 L316.4629 475.1372 L308.29 475.1372 l308.29 471.3818 Lfq308.29 471.3818 m316.4629 471.3818 L316.4629 475.1372 L308.29 475.1372 l308.29 471.3818 LhWn0 O0 0 0 1 k315.8721 472.5361 m315.7188 472.8901 L315.7227 472.8862 L315.5176 473.231 l315.2656 473.6758 314.9277 474.2842 314.25 474.708 c313.5723 475.0469 310.3965 475.4399 308.29 474.7759 c308.6797 474.375 308.9863 473.9409 309.1777 473.6011 C309.3457 473.313 L309.5762 472.8062 l309.7324 472.3921 309.9668 471.8369 310.4277 471.3818 C316.4629 471.3818 l316.1689 471.8081 315.9863 472.2329 315.8721 472.5361 CFQ0 A0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d0 XR301.2754 471.3818 m309.4512 471.3818 L309.4512 475.1362 L301.2754 475.1362 l301.2754 471.3818 Lfq301.2754 471.3818 m309.4512 471.3818 L309.4512 475.1362 L301.2754 475.1362 l301.2754 471.3818 LhWn0 O0 0 0 1 k308.8594 472.5298 m308.7031 472.8882 L308.707 472.8882 L308.5059 473.2261 l308.2568 473.6729 307.915 474.2832 307.2373 474.708 c306.5596 475.0469 303.377 475.439 301.2754 474.7749 c301.6641 474.375 301.9707 473.9399 302.1621 473.6011 C302.3301 473.313 L302.5625 472.8062 l302.7168 472.3921 302.9512 471.8369 303.4131 471.3818 C309.4512 471.3818 l309.1563 471.8052 308.9736 472.228 308.8594 472.5298 CFQ0 A0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d0 XR294.187 471.3818 m302.4355 471.3818 L302.4355 475.1411 L294.187 475.1411 l294.187 471.3818 Lfq294.187 471.3818 m302.4355 471.3818 L302.4355 475.1411 L294.187 475.1411 l294.187 471.3818 LhWn0 O0 0 0 1 k301.8447 472.5298 m301.6885 472.8882 L301.6914 472.8882 L301.4902 473.2261 l301.2422 473.6709 300.9004 474.2822 300.2227 474.708 c299.5234 475.0591 296.29 475.4531 294.188 474.7529 c294.5449 474.395 294.8359 474.019 295.0181 473.728 c295.1919 473.4629 295.189 473.4658 V295.4409 472.978 l295.6431 472.5029 295.9629 471.8408 296.707 471.3818 C302.4355 471.3818 l302.1416 471.8052 301.959 472.229 301.8447 472.5298 CFQ0 A0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d0 XR289.6621 471.3818 m295.54 471.3818 L295.54 474.9028 L289.6621 474.9028 l289.6621 471.3818 Lfq289.6621 471.3818 m295.54 471.3818 L295.54 474.9028 L289.6621 474.9028 l289.6621 471.3818 LhWn0 O0 0 0 1 k294.7329 472.6748 m294.5742 473.0049 L294.3711 473.3169 l294.1211 473.7119 293.7788 474.2529 293.228 474.5942 C293.0229 474.7349 l292.1948 475.104 290.8462 474.8408 290.0098 474.1489 c289.7422 473.9282 289.6738 473.5562 289.6621 473.2832 C289.6621 473.2021 l289.6621 472.5908 289.9258 471.9063 290.3101 471.3818 C295.54 471.3818 l295.126 471.8491 294.877 472.3389 294.7329 472.6748 CFQ0 A*u1 D0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d0 XR321.873 515.188 m317.6953 520.1992 312.5039 521.856 309.0703 522.2271 C308.5566 523.374 L309.8887 522.751 L309.8887 524.7432 L308.5566 524.147 L309.1602 525.4751 L307.168 525.4751 L307.8105 524.1221 L306.4395 524.7432 L306.4395 522.751 L307.8105 523.3989 L307.2969 522.292 l303.8594 522.1401 298.647 520.2178 294.4551 515.188 c294.2539 514.9482 294.0532 514.3081 294.373 513.9448 c294.6938 513.584 294.8979 513.5029 295.2192 513.1812 c295.5371 512.8599 296.5029 510.813 296.7031 510.252 c296.9038 509.689 296.9429 508.8862 y296.8179 507.8501 297.2261 507.4409 v297.5469 507.1201 298.188 507.1592 298.3091 506.959 c298.4282 506.7578 298.3892 506.4761 299.2734 506.6772 c300.1563 506.8779 303.7461 508.2588 308.1641 508.2451 c312.585 508.23 316.1748 506.8779 317.0547 506.6772 c317.9414 506.4761 317.8984 506.7578 318.0195 506.959 c318.1406 507.1592 318.7842 507.1201 319.1016 507.4409 c319.5098 507.8501 319.3848 508.8862 y319.4238 509.689 319.624 510.252 v319.8281 510.813 320.791 512.8599 321.1113 513.1812 c321.4336 513.5029 321.6338 513.584 321.9551 513.9448 c322.2754 514.3081 322.0742 514.9482 321.873 515.188 CF0 D306.8418 511.9238 m306.2715 511.646 305.6113 511.5068 305.1641 511.4668 c303.623 511.3301 303.3594 511.7612 303.2305 511.9712 c302.8252 512.6348 303.5898 513.8901 304.6074 513.6563 c304.2979 515.396 302.5762 514.231 v302.5469 515.771 301.293 516.0508 v300.4619 515.0698 301.3711 513.8252 y299.2676 513.8188 300.1055 512.1392 y300.7715 512.9399 302.1836 512.4678 302.1445 511.5601 c302.1211 511.0381 300.5977 510.4951 299.4336 510.9331 c298.27 511.376 297.3071 513.7041 297.5859 514.146 c299.6465 517.3838 304.292 518.8428 304.9336 519.0869 c305.5762 519.3232 305.9785 519.0869 306.0977 518.7642 c306.2031 518.479 306.8359 517.4531 307.3145 516.3921 C306.5322 516.3921 L307.582 514.4053 L305.332 515.3188 L305.332 512.4019 L307.582 513.353 l306.8418 511.9238 Lf316.8945 510.9331 m315.7305 510.4951 314.207 511.0381 314.1885 511.5601 c314.1445 512.4678 315.5566 512.9399 316.2266 512.1392 c317.0605 513.8188 314.957 513.8252 v315.8662 515.0698 315.0352 516.0508 v313.7813 515.771 313.752 514.231 y312.0293 515.396 311.7246 513.6563 y312.7383 513.8901 313.502 512.6348 313.0977 511.9712 c312.9727 511.7612 312.7051 511.3301 311.166 511.4668 c310.7227 511.5068 310.0684 511.644 309.5049 511.917 C308.8086 513.312 L310.9951 512.4019 L310.9951 515.3188 L308.8086 514.4463 L309.7988 516.3921 L309.0137 516.3921 l309.4922 517.4531 310.125 518.479 310.2305 518.7642 c310.3516 519.0869 310.752 519.3232 311.3945 519.0869 c312.0391 518.8428 316.6855 517.3838 318.7422 514.146 c319.0215 513.7041 318.0635 511.376 316.8945 510.9331 CF*U*u1 D308.3867 506.626 m308.125 506.626 L288.9302 506.626 L288.9331 504.688 l290.8501 504.7031 292.52 503.793 v293.875 503.0542 294.4609 501.5601 294.6348 501.021 C294.6348 478.9741 L293.479 478.9741 L295.7798 474.9912 L298.0801 478.9741 L296.9409 478.9741 L296.9409 480.8838 L302.9512 480.8838 L302.9512 478.9741 L301.7969 478.9741 L304.0977 474.9912 L306.3965 478.9741 L305.2578 478.9741 L305.2578 480.8838 L311.2676 480.8838 L311.2676 478.9741 L310.1133 478.9741 L312.4141 474.9912 L314.7148 478.9741 L313.5742 478.9741 L313.5742 480.8838 L319.585 480.8838 L319.585 478.9741 L318.4336 478.9741 L320.7305 474.9912 L323.0313 478.9741 L321.8926 478.9741 L321.8926 501.061 l322.0801 501.6318 322.666 503.0732 323.9912 503.793 c325.6621 504.7031 327.5781 504.688 Y327.5781 506.626 l308.3867 506.626 Lf0 D319.585 495.0381 m313.5742 495.0381 L313.5742 503.9912 L319.585 503.9912 l319.585 495.0381 Lf308.209 503.9912 m308.3047 503.9912 L311.2676 503.9912 L311.2676 495.0381 L305.2578 495.0381 L305.2578 503.9912 l308.209 503.9912 Lf296.9409 503.9912 m302.9512 503.9912 L302.9512 495.0381 L296.9409 495.0381 l296.9409 503.9912 Lf296.9409 483.521 mF296.9409 492.4053 m302.9512 492.4053 L302.9512 483.52 L296.9409 483.52 l296.9409 492.4053 Lf305.2578 483.521 mF305.2578 492.4053 m311.2676 492.4053 L311.2676 483.52 L305.2578 483.52 l305.2578 492.4053 Lf313.5742 483.521 mF313.5742 492.4053 m319.585 492.4053 L319.585 483.52 L313.5742 483.52 l313.5742 492.4053 Lf*U*u1 D289.3999 504.0029 m289.3999 502.7822 290.394 501.791 291.6172 501.791 c292.8379 501.791 293.8301 502.7822 293.8301 504.0029 c293.8301 505.2261 292.8379 506.2202 291.6172 506.2202 c290.394 506.2202 289.3999 505.2261 289.3999 504.0029 CF0 D290.3911 504.0029 m290.3911 504.6812 290.939 505.231 291.6172 505.231 c292.292 505.231 292.8442 504.6812 292.8442 504.0029 c292.8442 503.3281 292.292 502.7759 291.6172 502.7759 c290.939 502.7759 290.3911 503.3281 290.3911 504.0029 CF*U*u1 D289.5469 501.478 m289.064 497.894 L292.1748 497.4761 L292.7241 501.5479 L289.6128 501.9658 l289.5469 501.478 Lf0 D290.4629 500.856 m290.8672 500.7998 291.2061 500.7549 291.6143 500.7002 c291.5391 500.1362 291.4038 499.1499 291.3291 498.5879 c290.9219 498.6421 290.5859 498.687 290.1782 498.7432 c290.252 499.3062 290.3872 500.292 290.4629 500.856 CF*U*u1 D288.9751 496.7939 m288.8628 493.2861 L292.001 493.188 L292.124 497.1899 L288.9902 497.2891 l288.9751 496.7939 Lf0 D289.9458 496.27 m290.3569 496.2588 290.6958 496.2471 291.1069 496.2349 c291.0898 495.6772 291.0591 494.7642 291.0449 494.2061 c290.6328 494.2202 290.291 494.229 289.8828 494.2412 c289.8979 494.7979 289.9292 495.7139 289.9458 496.27 CF*U*u1 D291.395 492.8979 m288.7529 492.8789 L288.7788 488.769 L291.917 488.7891 L291.8911 492.9009 l291.395 492.8979 Lf0 D290.9092 491.9072 m290.9121 491.3389 290.918 490.3408 290.9219 489.772 c290.5142 489.771 290.1719 489.769 289.7642 489.7661 c289.7578 490.334 289.752 491.3291 289.7461 491.897 c290.1592 491.9009 290.4951 491.9028 290.9092 491.9072 CF*U*u1 D288.6992 488.1499 m288.3179 484.5532 L291.439 484.2251 L291.8721 488.313 L288.75 488.6421 l288.6992 488.1499 Lf0 D289.6289 487.5542 m290.0391 487.5122 290.375 487.478 290.7832 487.4341 c290.7231 486.8682 290.6182 485.877 290.562 485.312 c290.1499 485.354 289.814 485.3882 289.4063 485.4331 c289.4629 485.999 289.5679 486.9893 289.6289 487.5542 CF*U*u1 D288.1289 483.8311 m287.292 480.313 L290.3462 479.5869 L291.2959 483.585 L288.2422 484.312 l288.1289 483.8311 Lf0 D288.978 483.1221 m289.377 483.0239 289.707 482.9482 290.105 482.854 c289.9741 482.2988 289.7422 481.3311 289.6099 480.7759 c289.2119 480.874 288.8818 480.9502 288.4819 481.0459 c288.6152 481.6011 288.8462 482.5698 288.978 483.1221 CF*U*u1 D287.0342 479.7412 m285.3462 476.54 L288.123 475.0771 L290.0391 478.7148 L287.2661 480.1772 l287.0342 479.7412 Lf0 D287.6758 478.8428 m288.042 478.6489 288.3418 478.4912 288.7051 478.3008 c288.438 477.7969 287.9771 476.915 287.709 476.4131 c287.3462 476.604 287.0469 476.7632 286.6841 476.9561 c286.9473 477.4561 287.4121 478.3389 287.6758 478.8428 CF*U*u1 D283.314 473.8643 m283.314 472.6431 284.311 471.6479 285.5313 471.6479 c286.752 471.6479 287.7451 472.6431 287.7451 473.8643 c287.7451 475.085 286.752 476.0801 285.5313 476.0801 c284.311 476.0801 283.314 475.085 283.314 473.8643 CF0 D284.3052 473.8643 m284.3052 474.542 284.8569 475.0908 285.5313 475.0908 c286.209 475.0908 286.7578 474.542 286.7578 473.8643 c286.7578 473.187 286.209 472.6401 285.5313 472.6401 c284.8569 472.6401 284.3052 473.187 284.3052 473.8643 CF*U*u1 D325.0586 506.2202 m323.8379 506.2202 322.8457 505.2261 322.8457 504.0029 c322.8457 502.7822 323.8379 501.791 325.0586 501.791 c326.2832 501.791 327.2754 502.7822 327.2754 504.0029 c327.2754 505.2261 326.2832 506.2202 325.0586 506.2202 CF0 D325.0586 502.7759 m324.3809 502.7759 323.832 503.3281 323.832 504.0029 c323.832 504.6812 324.3809 505.231 325.0586 505.231 c325.7363 505.231 326.2891 504.6812 326.2891 504.0029 c326.2891 503.3281 325.7363 502.7759 325.0586 502.7759 CF*U*u1 D327.0635 501.9658 m323.9492 501.5479 L324.501 497.4761 L327.6074 497.894 L327.125 501.478 l327.0635 501.9658 Lf0 D326.498 498.7432 m326.0938 498.687 325.7539 498.6421 325.3477 498.5879 c325.2715 499.1499 325.1367 500.1362 325.0635 500.7002 c325.4707 500.7549 325.8066 500.7998 326.2129 500.856 c326.291 500.292 326.4199 499.3062 326.498 498.7432 CF*U*u1 D327.6855 497.2891 m324.5488 497.1899 L324.6748 493.188 L327.8135 493.2861 L327.7012 496.7939 l327.6855 497.2891 Lf0 D326.7949 494.2412 m326.3809 494.229 326.043 494.2202 325.6348 494.2061 c325.6133 494.7642 325.5859 495.6772 325.5645 496.2349 c325.9785 496.2471 326.3184 496.2588 326.7285 496.27 c326.748 495.7139 326.7734 494.7979 326.7949 494.2412 CF*U*u1 D324.7852 492.9009 m324.7588 488.7891 L327.8965 488.769 L327.9258 492.8789 L325.2813 492.8979 l324.7852 492.9009 Lf0 D326.9277 491.897 m326.9238 491.3291 326.918 490.334 326.916 489.7661 c326.502 489.769 326.166 489.771 325.752 489.772 c325.7578 490.3408 325.7637 491.3389 325.7676 491.9072 c326.1777 491.9028 326.5176 491.9009 326.9277 491.897 CF*U*u1 D327.9258 488.6421 m324.8066 488.313 L325.2363 484.2251 L328.3555 484.5532 L327.9805 488.1499 l327.9258 488.6421 Lf0 D327.2715 485.4331 m326.8613 485.3882 326.5215 485.354 326.1172 485.312 c326.0547 485.877 325.9492 486.8682 325.8906 487.4341 c326.3008 487.478 326.6367 487.5122 327.0469 487.5542 c327.1035 486.9893 327.209 485.999 327.2715 485.4331 CF*U*u1 D328.4297 484.312 m325.3799 483.585 L326.3301 479.5869 L329.3838 480.313 L328.5469 483.8311 l328.4297 484.312 Lf0 D328.1934 481.0459 m327.7939 480.9502 327.4648 480.874 327.0635 480.7759 c326.9297 481.3311 326.6992 482.2988 326.5664 482.854 c326.9727 482.9482 327.3027 483.0239 327.6982 483.1221 c327.8301 482.5698 328.0605 481.6011 328.1934 481.0459 CF*U*u1 D329.4141 480.1772 m326.6367 478.7148 L328.5527 475.0771 L331.3271 476.54 L329.6426 479.7412 l329.4141 480.1772 Lf0 D329.9922 476.9561 m329.6299 476.7632 329.3301 476.604 328.9668 476.4131 c328.7031 476.915 328.2344 477.7969 327.9707 478.3008 c328.334 478.4912 328.6367 478.6489 329 478.8428 c329.2637 478.3389 329.7285 477.4561 329.9922 476.9561 CF*U*u1 D331.1445 476.0801 m329.9199 476.0801 328.9277 475.085 328.9277 473.8643 c328.9277 472.6431 329.9199 471.6479 331.1445 471.6479 c332.3652 471.6479 333.3613 472.6431 333.3613 473.8643 c333.3613 475.085 332.3652 476.0801 331.1445 476.0801 CF0 D331.1445 472.6401 m330.4688 472.6401 329.918 473.187 329.918 473.8643 c329.918 474.542 330.4688 475.0908 331.1445 475.0908 c331.8223 475.0908 332.3711 474.542 332.3711 473.8643 c332.3711 473.187 331.8223 472.6401 331.1445 472.6401 CF*U248.9531 469.9331 m251.9492 468.5601 251.9492 468.5581 V254.127 467.6709 L257.9751 466.085 l257.666 467.1382 257.7622 467.917 y258.9492 467.2002 260.063 468.4741 v261.1748 469.7441 260.1431 471.8081 258.3159 473.5581 c256.4858 475.3052 254.3462 475.543 251.7251 474.5889 c249.9839 473.9551 248.6738 472.376 247.771 470.5962 c248.1401 470.377 248.5269 470.1563 248.9531 469.9331 CF*u1 D225.3521 424.5381 m221.978 421.0171 220.498 419.5928 219.7939 418.5225 c218.6689 417.6797 219.2271 417.1836 v219.7813 416.6885 223.6812 415.9463 227.4272 416.2539 c225.5313 413.9336 223.0869 409.9561 222.5571 407.0479 c221.9502 403.7031 223.7729 400.46 225.396 399.9521 c227.0161 399.4443 228.5972 399.8311 229.8091 401.2803 c231.4189 403.1982 232.0879 408.1631 y234.6758 408.1006 236.8809 408.1543 v234.77 419.1709 231.0859 428.9482 229.2319 432.9102 c228.8911 430.019 227.8999 427.2012 225.3521 424.5381 CF280.2378 439.5498 m279.2842 439.6279 278.252 439.7891 277.9351 439.4702 c277.6938 441.6938 278.1719 442.5669 v278.6479 443.4419 278.5669 444.0762 279.2842 444.1572 c277.2988 445.188 276.582 444.1572 v275.8711 443.126 275.4731 441.9321 275.4731 441.2178 c274.8359 440.3442 274.519 440.3442 v274.6782 438.5972 274.7578 437.0068 v274.8359 435.4189 274.519 433.4331 273.8828 431.208 c273.2461 428.9849 271.4199 425.9668 270.8652 425.3311 c270.4512 424.8599 269.7788 424.2588 269.3931 424.6621 c269.27 424.895 269.1738 425.165 269.1172 425.4893 c269.0449 425.9229 269.0571 426.1792 269.1069 426.3188 c269.188 427.5298 269.6172 428.9028 269.9121 430.9419 c270.6348 432.417 271.4082 434.0889 271.9238 435.5322 c272.938 438.3701 274.8662 441.5151 273.853 448.5088 c272.8359 455.501 266.2461 460.2671 264.4199 461.6851 c263.3999 462.481 261.646 463.3389 258.855 464.5278 c256.666 465.4639 253.8442 466.6011 250.2329 468.0708 c249.0762 468.5439 248.064 469.0142 247.1709 469.479 c241.728 472.3271 240.8491 475.0132 240.5161 476.5439 c240.1318 478.2798 241.6621 482.3799 247.3389 482.6401 c253.0171 482.8999 256.769 479.2002 258.0698 477.6382 c259.375 476.0732 260.4668 473.731 261.873 471.96 c263.2798 470.188 266.459 469.5112 y267.7612 467.271 270.313 465.2393 270.9912 464.771 c271.3628 464.5132 271.8281 463.9722 272.2271 463.5029 C272.5229 463.1143 l272.4902 463.1592 272.458 463.2158 272.4248 463.2671 c272.6582 462.9883 272.8569 462.7612 272.9678 462.6851 c273.2788 462.479 273.5952 463.3633 273.5952 464.1958 c273.5952 465.0298 273.3848 465.813 273.021 466.3862 c272.6563 466.958 271.873 469.355 271.6152 470.0298 c271.3931 470.603 271.1392 471.6538 271.063 471.9678 c271.0488 472.0259 271.042 472.0649 y271.75 474.7432 268.9551 478.418 v266.979 481.0239 263.7271 481.9741 262.4429 482.6401 c261.145 483.3149 257.5488 485.6592 255.3618 486.5459 c253.1719 487.4312 249.2651 488.7329 245.7759 488.4741 c242.2881 488.2139 236.9199 486.7021 234.6279 480.4512 c232.52 474.7109 235.1592 470.292 236.332 467.5908 c238.7559 468.7842 241.0171 468.2588 242.561 467.8989 c244.7241 467.397 247.314 466.2588 248.8652 465.1338 c251.0161 463.5688 251.502 461.0669 251.502 459.1299 c251.502 457.897 251.3052 456.896 251.2168 456.5112 c250.9199 455.1938 249.9341 454.3848 249.1782 453.9141 c249.4019 453.6143 249.6431 453.2959 249.8848 452.813 c250.104 452.377 250.2251 451.9692 250.2969 451.604 c251.895 452.189 254.3149 452.3452 257.2251 452.4521 C258.8442 452.521 l259.27 452.5381 259.6392 452.21 259.6572 451.7881 c259.6748 451.3643 259.3569 451.0068 258.9321 450.9878 C257.2813 450.917 l254.855 450.8271 251.188 450.6919 250.0742 449.8052 C248.5601 448.603 L248.8359 450.5229 l248.8389 450.5298 248.938 451.271 248.5122 452.126 c248.0381 453.0708 247.5039 453.5562 247.498 453.5601 C246.5679 454.396 L247.729 454.8511 l247.7441 454.8579 249.4199 455.5298 249.7212 456.8511 c249.834 457.356 250.7622 461.8579 247.9629 463.8931 c246.583 464.894 244.166 465.9502 242.2129 466.4053 c240.0928 466.8989 237.187 467.5752 234.2319 463.8291 c229.127 457.354 226.5039 451.856 226.2129 447.022 c226.188 446.6162 226.1758 446.2261 226.1758 445.8462 c226.1758 441.4102 227.7661 438.6851 229.1821 436.2568 C230.1841 434.4702 l231.5332 431.8369 235.9468 421.3599 238.4341 408.21 C238.5039 407.8369 l238.6919 406.8369 238.8848 405.8154 239.0552 405.2568 c241.4629 407.6455 254.1802 421.7002 255.5811 427.665 C255.6411 427.9131 L255.8359 428.0781 l256.0723 428.2759 260.7939 432.3418 260.7939 439.3311 c260.7939 440.603 260.6382 441.9678 260.271 443.4248 c260.2568 443.4878 260.248 443.5522 260.248 443.6143 c260.248 443.9561 260.4819 444.271 260.8301 444.3579 c261.2402 444.46 261.6582 444.2119 261.7632 443.7998 c262.1519 442.2432 262.3198 440.7778 262.3198 439.4092 c262.3198 432.2568 257.813 427.8062 256.9941 427.0562 c255.8242 422.7192 250 415.2969 245.4038 409.9814 c245.7109 408.5264 245.605 407.7197 245.605 406.9033 c245.605 405.9854 246.0918 404.4229 246.4419 403.3672 c246.5181 403.1426 246.583 402.9414 246.6411 402.7725 c246.9551 401.8193 246.3188 396.1006 246.0039 394.5137 c245.687 392.9238 242.771 390.5068 241.397 389.5068 c240.521 388.8721 240.7622 388.2363 240.9199 387.9189 c242.0332 388.9531 243.3828 388.8721 v244.7319 388.7939 246.082 389.2695 247.9902 388.1572 c249.895 387.0439 250.9531 386.498 251.3281 385.1396 c251.564 384.2646 251.7251 383.6299 y253.0742 385.2188 253.1509 386.251 v256.0132 388.0791 257.6001 388.2363 v259.189 388.3936 261.0942 387.8408 261.2559 386.9678 c261.4531 388.6738 260.3828 389.7461 v259.9063 390.2236 259.1069 390.8574 y259.9839 391.5732 260.5391 391.0146 v260.3828 392.6855 259.585 392.7646 v258.793 392.8447 255.2988 392.8447 254.0239 392.8447 c252.7559 392.8447 250.291 393.3213 249.7378 394.8301 c249.1812 396.3389 249.5801 402.0566 250.291 402.6924 c250.5552 402.9248 250.8179 403.0195 251.0459 403.0322 c251.4482 403.0596 251.7539 402.8457 251.8022 402.6924 c252.2788 404.3623 252.9121 404.9971 v253.3828 405.4619 256.229 408.793 257.8462 412.8369 c260.8418 412.792 263.4282 413.2637 265.3828 414.5293 c268.085 416.2764 270.625 417.8643 271.896 417.4678 c272.2959 419.6123 271.021 420.166 v273.3281 423.584 274.041 425.25 v274.7578 426.9209 275.8711 426.9209 275.79 426.0459 c275.709 425.1729 274.9951 421.6792 279.4429 422.0752 c278.6479 422.79 278.5669 423.7412 v278.4922 424.6958 277.5352 432.3208 278.1719 433.9092 c278.8071 435.499 279.7622 437.9609 280.396 438.1201 c281.0332 438.2769 281.4292 438.1992 281.7461 437.8818 c281.188 439.4702 280.2378 439.5498 VF*U*u318.1406 496.541 m318.0635 496.7432 317.9082 496.9248 317.8066 497.124 c317.707 497.3208 317.4258 497.4072 317.3066 497.5972 c317.1836 497.7842 317.2617 498.1172 317.1172 498.292 c316.9766 498.4702 316.7568 498.5908 316.5977 498.7588 c316.4355 498.9248 316.166 498.9678 315.9863 499.123 c315.8086 499.2739 315.6113 499.3862 315.4189 499.5278 c315.2266 499.6709 315.0586 499.8281 314.8535 499.958 c314.7051 500.0498 314.5645 500.1509 314.4199 500.249 C314.4199 495.8818 L318.1543 495.8818 l318.1152 496.0889 318.2109 496.3408 318.1406 496.541 CF314.4199 488.9063 m314.6016 488.9961 314.7861 489.0801 314.9541 489.189 c315.167 489.3232 315.4004 489.417 315.5957 489.564 c315.7939 489.7139 316.0938 489.7461 316.2734 489.9053 c316.4541 490.0679 316.4844 490.3931 316.6465 490.5669 c316.8105 490.7402 316.9766 490.9131 317.1172 491.0972 c317.2617 491.2842 317.5781 491.3608 317.7012 491.561 C314.4199 491.561 l314.4199 488.9063 Lf309.1484 501.6812 m308.8867 501.6938 308.6318 501.7881 308.3613 501.7881 c308.1729 501.7881 307.9902 501.707 307.8008 501.6982 c307.582 501.6899 307.3535 501.8682 307.1406 501.8491 c306.9219 501.8301 306.7246 501.647 306.5137 501.6182 c306.377 501.5991 306.2383 501.6108 306.1016 501.6172 C306.1016 495.8818 L310.4219 495.8818 L310.4219 501.7329 l310.2754 501.8271 310.125 501.9341 309.9629 501.9531 c309.7051 501.9829 309.4141 501.6631 309.1484 501.6812 CF306.1016 487.4141 m306.1094 487.4141 306.1191 487.4131 306.1309 487.4131 c306.4121 485.9419 306.4785 485.2021 306.209 484.3652 C309.0137 484.3652 l309.0137 485.2202 309.3398 486.272 310.3477 487.5039 c310.375 487.5088 310.3984 487.5181 310.4219 487.5229 C310.4219 491.561 L306.1016 491.561 l306.1016 487.4141 Lf299.1445 491.4272 m299.2676 491.2432 299.5684 491.1729 299.7119 490.9922 c299.8555 490.8149 300.0273 490.6709 300.1895 490.502 c300.3477 490.335 300.4805 490.144 300.6602 489.9893 c300.834 489.8359 301.041 489.7178 301.2363 489.5752 c301.4248 489.4331 301.5059 489.1133 301.7129 488.9849 c301.8164 488.9189 301.9609 488.9111 302.1074 488.9053 C302.1074 491.561 L299.1309 491.561 l299.1367 491.5161 299.124 491.4619 299.1445 491.4272 CF301.1484 499.6201 m300.9531 499.4702 300.7588 499.3252 300.5781 499.1631 c300.3965 499 300.126 498.9248 299.9609 498.7529 c299.7988 498.5771 299.7119 498.3291 299.5684 498.1431 c299.4238 497.9521 299.4023 497.687 299.2793 497.4893 c299.1484 497.2671 298.9893 497.0708 298.8848 496.8408 c298.7759 496.604 298.7788 496.3452 298.707 496.1011 c298.6841 496.0259 298.6563 495.9541 298.6328 495.8818 C302.1074 495.8818 L302.1074 500.1748 l302.0273 500.0723 301.9453 499.9712 301.8457 499.9038 c301.6348 499.771 301.3477 499.7642 301.1484 499.6201 CF*U0 D238.3979 376.4521 m241.5469 376.4521 L241.5469 375.6221 L239.3848 375.6221 L239.3848 374.5879 L241.2598 374.5879 L241.2598 373.8232 L239.3848 373.8232 L239.3848 371.9727 L238.3979 371.9727 l238.3979 376.4521 Lf*u244.127 376.5586 m245.5132 376.5586 246.3281 375.5244 246.3281 374.1943 c246.3281 372.9014 245.5132 371.8662 244.127 371.8662 c242.7378 371.8662 241.9258 372.9014 241.9258 374.1943 c241.9258 375.5244 242.7378 376.5586 244.127 376.5586 CF1 D244.127 372.6943 m245.0122 372.6943 245.3418 373.4463 245.3418 374.1943 c245.3418 374.9775 245.0122 375.7314 244.127 375.7314 c243.2422 375.7314 242.9092 374.9775 242.9092 374.1943 c242.9092 373.4463 243.2422 372.6943 244.127 372.6943 CF*U*u0 D246.9971 376.4521 m249.4141 376.4521 l250.2148 376.4521 250.7251 375.8926 250.7251 375.2158 c250.7251 374.6885 250.5122 374.2939 250.0142 374.0928 C250.0142 374.0791 l250.4971 373.9551 250.6348 373.4844 250.668 373.0322 c250.686 372.751 250.6802 372.2236 250.8569 371.9727 C249.8711 371.9727 l249.7539 372.2549 249.7661 372.6885 249.7148 373.0449 c249.646 373.5156 249.4629 373.7227 248.9678 373.7227 C247.9839 373.7227 L247.9839 371.9727 L246.9971 371.9727 l246.9971 376.4521 Lf1 D247.9839 374.4268 m249.063 374.4268 l249.502 374.4268 249.7378 374.6143 249.7378 375.0654 c249.7378 375.499 249.502 375.6855 249.063 375.6855 C247.9839 375.6855 l247.9839 374.4268 Lf*U0 D254.2622 375.6221 m252.9209 375.6221 L252.9209 376.4521 L256.5889 376.4521 L256.5889 375.6221 L255.248 375.6221 L255.248 371.9727 L254.2622 371.9727 l254.2622 375.6221 Lf257.104 376.4521 m258.0879 376.4521 L258.0879 374.7314 L259.9019 374.7314 L259.9019 376.4521 L260.8872 376.4521 L260.8872 371.9727 L259.9019 371.9727 L259.9019 373.9043 L258.0879 373.9043 L258.0879 371.9727 L257.104 371.9727 l257.104 376.4521 Lf261.7539 376.4521 m265.104 376.4521 L265.104 375.6221 L262.7368 375.6221 L262.7368 374.6631 L264.9082 374.6631 L264.9082 373.8984 L262.7368 373.8984 L262.7368 372.7998 L265.1509 372.7998 L265.1509 371.9727 L261.7539 371.9727 l261.7539 376.4521 Lf*u271.2852 371.5527 m270.6519 372.1299 l270.3579 371.9609 269.9893 371.8662 269.5659 371.8662 c268.1812 371.8662 267.3652 372.9014 267.3652 374.1943 c267.3652 375.5244 268.1812 376.5586 269.5659 376.5586 c270.9551 376.5586 271.771 375.5244 271.771 374.1943 c271.771 373.5479 271.564 372.9697 271.186 372.5439 C271.7441 372.0361 l271.2852 371.5527 Lf1 D270.002 373.6279 m270.5078 373.165 l270.6738 373.3896 270.7842 373.7295 270.7842 374.1943 c270.7842 374.9775 270.4512 375.7314 269.5659 375.7314 c268.6851 375.7314 268.3521 374.9775 268.3521 374.1943 c268.3521 373.4463 268.6851 372.6943 269.5659 372.6943 c269.7129 372.6943 269.894 372.6943 269.9629 372.7568 C269.543 373.1396 l270.002 373.6279 Lf*U0 D276.2422 373.666 m276.2422 372.4561 275.5249 371.8662 274.3291 371.8662 c273.123 371.8662 272.4219 372.4502 272.4219 373.666 C272.4219 376.4521 L273.4082 376.4521 L273.4082 373.666 l273.4082 373.1768 273.5313 372.6943 274.3291 372.6943 c275.0313 372.6943 275.2559 373.001 275.2559 373.666 C275.2559 376.4521 L276.2422 376.4521 l276.2422 373.666 Lf277.0889 376.4521 m280.439 376.4521 L280.439 375.6221 L278.0752 375.6221 L278.0752 374.6631 L280.2441 374.6631 L280.2441 373.8984 L278.0752 373.8984 L278.0752 372.7998 L280.4902 372.7998 L280.4902 371.9727 L277.0889 371.9727 l277.0889 376.4521 Lf281.1519 376.4521 m284.5029 376.4521 L284.5029 375.6221 L282.1401 375.6221 L282.1401 374.6631 L284.3091 374.6631 L284.3091 373.8984 L282.1401 373.8984 L282.1401 372.7998 L284.5542 372.7998 L284.5542 371.9727 L281.1519 371.9727 l281.1519 376.4521 Lf285.2202 376.4521 m286.1973 376.4521 L288.0659 373.4463 L288.0781 373.4463 L288.0781 376.4521 L289.002 376.4521 L289.002 371.9727 L288.0161 371.9727 L286.1519 374.9697 L286.1411 374.9697 L286.1411 371.9727 L285.2202 371.9727 l285.2202 376.4521 Lf289.8169 372.9385 m290.8008 372.9385 L290.8008 371.9727 l290.8008 371.3965 290.3628 371.0127 289.8242 370.9326 C289.8242 371.3838 l290.0879 371.4268 290.2788 371.6963 290.2681 371.9727 C289.8169 371.9727 l289.8169 372.9385 Lf294.3462 375.6221 m293.0029 375.6221 L293.0029 376.4521 L296.6738 376.4521 L296.6738 375.6221 L295.3301 375.6221 L295.3301 371.9727 L294.3462 371.9727 l294.3462 375.6221 Lf297.187 376.4521 m298.1738 376.4521 L298.1738 374.7314 L299.9844 374.7314 L299.9844 376.4521 L300.9688 376.4521 L300.9688 371.9727 L299.9844 371.9727 L299.9844 373.9043 L298.1738 373.9043 L298.1738 371.9727 L297.187 371.9727 l297.187 376.4521 Lf301.8359 376.4521 m305.1855 376.4521 L305.1855 375.6221 L302.8184 375.6221 L302.8184 374.6631 L304.9902 374.6631 L304.9902 373.8984 L302.8184 373.8984 L302.8184 372.7998 L305.2344 372.7998 L305.2344 371.9727 L301.8359 371.9727 l301.8359 376.4521 Lf307.6426 376.4521 m308.6289 376.4521 L308.6289 372.7998 L310.8135 372.7998 L310.8135 371.9727 L307.6426 371.9727 l307.6426 376.4521 Lf*u312.5879 376.4521 m313.5957 376.4521 L315.2715 371.9727 L314.25 371.9727 L313.9102 372.9697 L312.2344 372.9697 L311.8828 371.9727 L310.8867 371.9727 l312.5879 376.4521 Lf1 D312.4922 373.7031 m313.6523 373.7031 L313.0889 375.3467 L313.0762 375.3467 l312.4922 373.7031 Lf*U0 D319.8135 371.9727 m318.8359 371.9727 L318.0762 375.0215 L318.0635 375.0215 L317.3145 371.9727 L316.3184 371.9727 L315.1348 376.4521 L316.1182 376.4521 L316.8262 373.4033 L316.8408 373.4033 L317.6172 376.4521 L318.5391 376.4521 L319.3027 373.3662 L319.3184 373.3662 L320.0498 376.4521 L321.0156 376.4521 l319.8135 371.9727 Lf320.9531 372.9385 m321.9395 372.9385 L321.9395 371.9727 l321.9395 371.3965 321.498 371.0127 320.9619 370.9326 C320.9619 371.3838 l321.2227 371.4268 321.418 371.6963 321.4063 371.9727 C320.9531 371.9727 l320.9531 372.9385 Lf*u325.7158 376.4521 m326.7266 376.4521 L328.4004 371.9727 L327.377 371.9727 L327.0381 372.9697 L325.3652 372.9697 L325.0137 371.9727 L324.0156 371.9727 l325.7158 376.4521 Lf1 D325.623 373.7031 m326.7832 373.7031 L326.2168 375.3467 L326.2051 375.3467 l325.623 373.7031 Lf*U0 D328.79 376.4521 m329.7676 376.4521 L331.6367 373.4463 L331.6484 373.4463 L331.6484 376.4521 L332.5684 376.4521 L332.5684 371.9727 L331.585 371.9727 L329.7227 374.9697 L329.7109 374.9697 L329.7109 371.9727 L328.79 371.9727 l328.79 376.4521 Lf*u333.4355 376.4521 m335.3672 376.4521 l336.5273 376.4521 337.4004 375.7236 337.4004 374.2373 c337.4004 372.9385 336.7344 371.9727 335.3672 371.9727 C333.4355 371.9727 l333.4355 376.4521 Lf1 D334.4199 372.7998 m335.2988 372.7998 l335.8711 372.7998 336.4141 373.1514 336.4141 374.1426 c336.4141 375.0469 336.1016 375.6221 335.125 375.6221 C334.4199 375.6221 l334.4199 372.7998 Lf*U0 D340.8203 375.6221 m339.4766 375.6221 L339.4766 376.4521 L343.1465 376.4521 L343.1465 375.6221 L341.8047 375.6221 L341.8047 371.9727 L340.8203 371.9727 l340.8203 375.6221 Lf343.6602 376.4521 m344.6445 376.4521 L344.6445 374.7314 L346.459 374.7314 L346.459 376.4521 L347.4414 376.4521 L347.4414 371.9727 L346.459 371.9727 L346.459 373.9043 L344.6445 373.9043 L344.6445 371.9727 L343.6602 371.9727 l343.6602 376.4521 Lf348.3086 376.4521 m351.6592 376.4521 L351.6592 375.6221 L349.293 375.6221 L349.293 374.6631 L351.4648 374.6631 L351.4648 373.8984 L349.293 373.8984 L349.293 372.7998 L351.71 372.7998 L351.71 371.9727 L348.3086 371.9727 l348.3086 376.4521 Lf*u354.1191 376.4521 m356.1367 376.4521 l357.2529 376.4521 357.6885 375.7432 357.6885 375.0156 c357.6885 374.2861 357.2529 373.5791 356.1367 373.5791 C355.1035 373.5791 L355.1035 371.9727 L354.1191 371.9727 l354.1191 376.4521 Lf1 D355.1035 374.3438 m355.8672 374.3438 l356.3262 374.3438 356.7344 374.4443 356.7344 375.0156 c356.7344 375.585 356.3262 375.6855 355.8672 375.6855 C355.1035 375.6855 l355.1035 374.3438 Lf*U0 D358.3027 376.4521 m361.6504 376.4521 L361.6504 375.6221 L359.2861 375.6221 L359.2861 374.6631 L361.458 374.6631 L361.458 373.8984 L359.2861 373.8984 L359.2861 372.7998 L361.7012 372.7998 L361.7012 371.9727 L358.3027 371.9727 l358.3027 376.4521 Lf*u364.373 376.5586 m365.7617 376.5586 366.5742 375.5244 366.5742 374.1943 c366.5742 372.9014 365.7617 371.8662 364.373 371.8662 c362.9863 371.8662 362.1719 372.9014 362.1719 374.1943 c362.1719 375.5244 362.9863 376.5586 364.373 376.5586 CF1 D364.373 372.6943 m365.2578 372.6943 365.5908 373.4463 365.5908 374.1943 c365.5908 374.9775 365.2578 375.7314 364.373 375.7314 c363.4883 375.7314 363.1582 374.9775 363.1582 374.1943 c363.1582 373.4463 363.4883 372.6943 364.373 372.6943 CF*U*u0 D367.2461 376.4521 m369.2656 376.4521 l370.3838 376.4521 370.8145 375.7432 370.8145 375.0156 c370.8145 374.2861 370.3838 373.5791 369.2656 373.5791 C368.2305 373.5791 L368.2305 371.9727 L367.2461 371.9727 l367.2461 376.4521 Lf1 D368.2305 374.3438 m368.998 374.3438 l369.4531 374.3438 369.8613 374.4443 369.8613 375.0156 c369.8613 375.585 369.4531 375.6855 368.998 375.6855 C368.2305 375.6855 l368.2305 374.3438 Lf*U0 D371.4297 376.4521 m372.4141 376.4521 L372.4141 372.7998 L374.5977 372.7998 L374.5977 371.9727 L371.4297 371.9727 l371.4297 376.4521 Lf375.1484 376.4521 m378.5 376.4521 L378.5 375.6221 L376.1328 375.6221 L376.1328 374.6631 L378.3047 374.6631 L378.3047 373.8984 L376.1328 373.8984 L376.1328 372.7998 L378.5508 372.7998 L378.5508 371.9727 L375.1484 371.9727 l375.1484 376.4521 Lf*u1 D380.9414 380.9229 m234.6758 380.9229 L234.6758 367.4854 L381.709 367.4854 L381.709 380.9229 l380.9414 380.9229 Lf0 D380.1738 379.3867 mF380.1738 369.0215 m236.2119 369.0215 L236.2119 379.3857 L380.1738 379.3857 l380.1738 369.0215 Lf*U*u1 D398.8398 416.8232 m398.8398 416.873 l398.8135 417.5313 398.2461 418.0439 397.959 418.2744 c397.3799 419.1328 396.3926 420.1592 394.4551 422.1631 C392.374 424.3262 l389.6816 427.1338 388.7656 430.103 388.5586 433.5171 C389.3027 434.8408 l390.8613 437.5151 392.7998 440.8408 392.4668 446.4248 c392.1543 451.562 389.4316 457.3242 384.1387 464.0439 c383.2539 465.1641 382.3594 465.9502 381.4785 466.4893 c381.6973 466.9858 381.9512 467.5801 y382.8535 469.5322 384.0781 472.1812 384.0781 475.415 c384.0781 476.834 383.8418 478.3662 383.2412 480.0029 c380.752 486.7949 374.8164 488.2261 371.5 488.4731 c367.8252 488.7471 363.7246 487.353 361.6074 486.4961 c360.084 485.8799 357.9883 484.6309 356.3047 483.6279 C354.4668 482.563 L353.5137 482.1318 l351.8779 481.4292 349.4102 480.3682 347.7246 478.146 c345.7656 475.5708 345.418 473.4189 345.418 472.2222 c345.418 471.813 345.4531 471.5649 345.4844 471.4009 c345.4629 471.3208 344.9707 469.5928 Y344.6504 468.6973 l344.3711 467.9009 343.8496 466.418 343.627 466.0708 c343.1885 465.377 342.9453 464.4678 342.9453 463.5122 c342.9453 462.8848 343.1172 461.7329 343.7559 461.3882 c344.0381 461.2349 344.3682 461.25 344.6348 461.4272 c344.6406 461.4312 345.0605 461.8643 345.2168 462.0249 C345.2402 462.0068 L345.5439 462.396 l345.5293 462.3779 346.627 463.521 y347.3965 464.0532 349.7969 466.022 351.1758 468.2241 c351.8535 468.3872 354.5156 469.1143 355.8906 470.8491 C357.8496 473.7861 L359.6816 476.5132 l360.666 477.6929 364.3047 481.5229 369.8555 481.269 c372.8281 481.1318 374.373 479.9028 375.1445 478.896 c375.8135 478.0259 376.0791 477.0811 376.0791 476.415 c376.0791 476.2632 376.0664 476.125 376.04 476.0068 c375.8066 474.9302 375.2578 472.4658 370.3135 469.7168 c369.5313 471.4292 368.1016 473.6851 365.7402 474.5488 c362.7832 475.624 360.3926 475.2393 358.4385 473.3682 c356.0645 471.0972 355.3789 468.7861 356.6465 467.3369 c357.3369 466.5469 358.0928 466.3398 358.7285 466.3618 c358.6777 465.8662 358.5332 465.2158 358.0996 464.4741 c354.9941 463.1489 353.3926 462.3281 352.3818 461.541 C352.0977 461.3223 l349.8027 459.5542 343.7021 454.8599 342.6934 447.9229 c342.4863 446.4971 342.4004 445.2261 342.4004 444.0811 c342.4004 442.6772 342.5566 441.5132 342.7676 440.438 c342.6348 440.5811 342.4414 440.7891 342.3672 440.8701 c342.2773 441.7671 341.8672 442.9053 341.21 443.8618 c340.1748 445.3491 337.8838 444.2158 337.625 444.0811 C336.8789 443.3662 l337.9199 442.7788 337.9219 442.7788 V337.9219 442.7778 l337.9219 442.7568 338.084 442.3911 Y338.4531 441.5542 l338.6094 441.2651 338.666 440.6318 338.666 439.9912 c338.666 439.8662 338.6543 439.7651 338.6484 439.6421 c338.2656 439.6572 337.8389 439.6318 337.3711 439.5869 C336.9336 439.5479 l335.5771 439.4331 334.9043 437.6299 334.834 437.4238 C335.2998 437.2471 l335.4414 437.1631 336.0273 436.9248 336.54 436.7959 c337.0195 436.4868 337.9316 434.188 338.3242 433.2021 C338.418 432.9678 l338.7344 432.1748 338.6152 429.1401 338.0605 423.9458 C337.9746 423.1099 l337.9199 422.4531 337.3281 421.9028 337.3223 421.8979 C336.1777 420.8472 L337.7227 420.7061 l339.3477 420.562 340.5586 420.8882 341.3242 421.6748 c342.0498 422.4219 342.2109 423.4189 342.2109 424.2222 c342.2109 424.5132 342.1816 424.7261 342.1602 424.9419 c342.2832 424.7939 342.418 424.6099 342.5527 424.2939 c343.127 422.958 344.5996 420.667 345.2715 419.6455 c344.7422 419.0762 344.5781 418.2334 344.5781 417.5029 c344.5781 417.1904 344.6074 416.8994 344.6504 416.6592 C344.791 415.8984 L345.5293 416.1279 l346.5508 416.4463 349.5117 414.5342 351.4707 413.2686 c353.3359 412.0605 355.7891 411.4736 358.9502 411.4668 c360.6328 407.5332 363.3418 404.3105 363.8301 403.8252 c364.1992 403.458 364.6016 402.3984 364.7656 401.8174 C365.207 400.2861 l365.8301 401.3643 365.9824 401.6309 v366.1484 401.6572 366.4805 401.4932 y366.9355 400.8545 366.502 395.7314 366.0566 394.3525 c366.4609 394.2529 367.0215 394.04 367.502 393.9248 c367.9805 395.7275 368.4043 401.6162 367.3926 402.5186 c367.3906 402.5186 366.2148 403.0303 y366.0762 403.04 365.957 402.9814 365.8242 402.958 c365.5996 403.5557 365.2549 404.3408 364.7988 404.7959 c364.3252 405.2686 361.5869 408.4854 360.0176 412.4072 C359.8418 412.8447 L359.3701 412.8369 l356.2715 412.791 353.9336 413.3086 352.2168 414.4199 c349.5449 416.1465 347.457 417.3965 345.9551 417.4922 c345.9551 417.5029 345.9512 417.5068 345.9512 417.5186 c345.9512 418.0361 346.0566 418.668 346.4766 418.8496 C347.2344 419.1787 L346.7734 419.8633 l346.75 419.896 344.4941 423.248 343.8164 424.833 c343.1504 426.3838 342.1885 426.749 341.5664 426.5908 c341.1445 426.4839 340.7451 426.0928 340.7451 425.4492 c340.7451 425.3989 340.748 425.3491 340.7539 425.2979 C340.7773 425.0811 l340.8018 424.8599 340.8379 424.5522 340.8379 424.2158 c340.8379 423.665 340.7422 423.042 340.3398 422.6318 c340.0732 422.355 339.6328 422.2119 339.1162 422.1309 c339.2266 422.3921 339.3145 422.6792 339.3418 422.9961 c339.3418 422.999 339.4258 423.8022 y339.7041 426.4111 339.9561 429.1309 339.9561 431.0889 c339.9561 432.1611 339.8809 433.0059 339.6914 433.478 C339.5996 433.7109 l338.4297 436.6382 337.8086 437.896 336.9961 438.0991 c336.9844 438.103 336.9688 438.103 336.957 438.104 c336.9844 438.1152 337.0195 438.1792 337.0469 438.1802 C337.5 438.2202 l337.9395 438.2632 338.6777 438.3311 338.8672 438.252 C339.833 437.5278 L339.9746 438.709 l339.9922 438.8901 340.04 439.397 340.04 439.9951 c340.04 440.749 339.9648 441.647 339.6563 442.2109 C339.3682 442.874 l339.332 442.9678 339.2578 443.0698 339.2148 443.1719 c339.5898 443.249 339.9473 443.271 340.082 443.0811 c340.7266 442.1401 341.0684 441.0859 341.0684 440.5313 C341.0684 440.3081 L341.1973 440.1279 l341.5195 439.6899 341.7715 439.4531 341.9922 439.2842 c341.9453 438.6221 341.7832 436.354 y341.7734 436.1851 341.7715 436.0112 341.7715 435.833 c341.7715 434.3062 342.0762 432.46 342.6797 430.335 c343.3418 428.0381 345.2266 424.9009 345.8438 424.1919 c346.4453 423.5068 346.9863 423.1689 347.499 423.1582 C348.3271 423.5 l348.3301 423.501 348.792 424.7319 348.792 424.7349 c348.7861 424.7368 348.7617 425.8682 Y348.7617 425.916 L348.8047 425.6792 L348.4316 427.9458 L347.9766 430.4331 L347.9277 430.5581 L345.9492 435.0791 L345.4336 436.415 l344.4453 438.8862 343.2168 441.9639 344.0527 447.7261 c344.9805 454.1128 350.7598 458.5601 352.9336 460.2329 C353.2246 460.458 l354.1211 461.1572 355.6895 461.9551 358.6387 463.2119 C365.1172 465.8818 L367.2559 466.751 l367.2559 466.7529 370.3711 468.1851 y375.7461 470.9971 376.9395 473.6851 377.3809 475.7119 c377.5781 476.6143 377.4023 478.208 376.2324 479.731 c375.2842 480.9692 373.4189 482.479 369.918 482.6401 c363.9043 482.915 360.0176 479.062 358.6289 477.3921 C356.6797 474.501 L354.8145 471.7021 l353.582 470.146 350.6504 469.5029 350.6211 469.4951 C350.3281 469.4331 L350.1748 469.1689 l348.9355 467.043 346.4453 465.063 345.8477 464.6489 C344.4785 463.2598 l344.416 463.1812 344.3613 463.1118 v344.3438 463.2412 344.3164 463.3608 344.3164 463.5122 c344.3164 464.2012 344.4883 464.8662 344.7852 465.333 c345.0664 465.7769 345.46 466.8662 345.9414 468.2432 C346.252 469.0981 L346.8789 471.2979 L346.8496 471.5498 l346.8418 471.5791 346.7852 471.8223 346.7852 472.2422 c346.7852 473.1851 347.0664 475.019 348.8164 477.3169 c350.2832 479.25 352.5527 480.2271 354.0566 480.8711 C355.0996 481.3452 L357.0068 482.4482 l358.5635 483.377 360.6953 484.647 362.1211 485.2251 c364.127 486.0361 367.999 487.356 371.3965 487.104 c374.3848 486.8818 379.7285 485.6011 381.9551 479.5298 c383.7266 474.6958 381.9805 470.915 380.707 468.1553 C380.248 467.0952 l378.0801 467.9229 376.082 467.4619 374.6855 467.1362 c372.5342 466.6372 369.9551 465.5049 368.4102 464.3828 c366.2871 462.8398 365.8066 460.3643 365.8066 458.4458 c365.8066 457.2222 366.002 456.2271 366.0889 455.8442 c366.3926 454.5112 367.4141 453.7021 368.1641 453.251 c367.9297 452.9482 367.6699 452.6021 367.4141 452.0918 c367.168 451.6021 367.0605 451.1631 366.998 450.7729 c365.249 451.4561 362.5176 451.5928 359.9971 451.686 C358.375 451.7549 l357.8672 451.8452 357.7754 451.1689 v357.6797 450.4722 358.2969 450.3838 Y359.9453 450.313 l362.3848 450.2241 366.0703 450.0889 367.2041 449.1831 C368.5664 448.0972 L368.3086 449.8252 l368.3086 449.833 368.2031 450.5972 368.6406 451.479 c369.124 452.438 369.6699 452.9312 369.6729 452.937 C370.5098 453.6792 L369.4688 454.0889 l369.4512 454.0972 367.7344 454.7852 367.4258 456.147 c367.3135 456.6582 366.377 461.208 369.2168 463.272 c370.6055 464.2798 373.0352 465.3452 374.9932 465.7979 c377.1387 466.2979 380.0742 466.981 383.0635 463.1948 c388.1758 456.7021 390.8027 451.188 391.0957 446.3428 c391.1211 445.937 391.1328 445.542 391.1328 445.1592 c391.1328 440.7021 389.5371 437.9668 388.1182 435.5313 C387.1191 433.749 l385.7695 431.1201 381.3613 420.6553 378.875 407.5078 C378.8027 407.1357 l378.5898 405.9932 378.3867 404.9346 378.2031 404.4268 c376.1816 406.3838 362.9805 420.9482 361.5664 426.9609 C361.5156 427.1831 L361.3379 427.3301 l361.1016 427.5288 356.3496 431.6162 356.3496 438.645 c356.3496 439.9209 356.5059 441.2939 356.875 442.7598 c357.0273 443.3472 356.377 443.4893 v355.7227 443.6362 355.5469 443.0962 y355.1523 441.5459 354.9883 440.0859 354.9883 438.7231 c354.9883 431.5381 359.5527 427.0991 360.3066 426.417 c361.4063 422.2842 366.7969 415.3018 371.2832 410.0459 C371.2324 409.8457 l370.8662 408.3701 370.8984 407.4629 370.9258 406.7324 C370.9385 406.2168 l370.9385 405.3311 370.3535 403.5615 370.1348 402.8965 c370.1348 402.8975 370.0605 402.6729 Y369.9385 402.2969 l369.8535 402.0459 369.8164 401.5928 369.8164 401.0215 c369.8164 398.7803 370.3164 394.9912 370.5586 394.208 c370.9746 392.8447 372.4355 391.8037 372.4531 391.7451 c373.1035 391.5742 372.7559 392.6631 373.2754 392.498 c373.0195 392.8584 372.4473 393.5811 372.1504 394.4355 c371.8535 395.29 371.1855 399.4219 371.1855 401.1357 c371.1855 401.4883 371.1992 401.7461 371.2383 401.8701 c371.2412 401.877 371.4385 402.4639 y371.8682 403.7744 372.3086 405.2422 372.3086 406.2168 C372.2969 406.7803 l372.291 406.9727 372.2822 407.167 372.2822 407.374 c372.2822 407.7461 372.333 408.2051 372.4199 408.7256 c375.2031 405.5322 377.4229 403.2334 377.6563 403.0781 c378.1035 402.7822 378.4766 402.8389 378.709 402.9385 c379.459 403.2578 379.666 404.2998 380.1348 406.7861 c381.7656 406.7402 383.6309 406.7627 384.5547 406.7793 c384.7891 405.3779 385.4941 401.8174 386.8926 400.1523 c388.2412 398.54 390.0684 397.9941 392.0381 398.6143 c393.793 399.1631 395.4727 401.9678 395.4727 405.0352 c395.4727 405.5127 395.4336 405.999 395.3438 406.4834 c394.875 409.0576 393.0068 412.3564 391.1982 414.8271 c394.4297 414.7744 397.7402 415.3486 398.457 415.9854 c398.7051 416.207 398.8398 416.5049 398.8398 416.8232 CF0 D344.1582 435.9053 m344.6563 434.6162 l346.4297 430.563 346.6504 430.0552 v346.6885 429.8662 347.0879 427.6689 Y347.4336 425.5869 L347.4688 425.418 L347.4336 424.915 l347.4297 424.8901 347.4004 424.7588 347.373 424.6338 c347.2539 424.7178 347.0977 424.8472 346.875 425.0972 c346.4219 425.6162 344.6289 428.5181 343.999 430.7119 c343.4297 432.7139 343.1406 434.4331 343.1406 435.8271 c343.1406 435.9839 343.1445 436.1382 343.1523 436.2871 c343.2305 437.3672 343.2969 438.3022 v343.5732 437.4351 343.8701 436.6279 344.1582 435.9053 CF366.7363 468.021 m364.6016 467.1528 L359.835 465.189 l360.0547 465.8921 360.1709 466.5132 360.1709 466.8901 c360.1709 467.146 360.1504 467.3032 360.1465 467.3252 C360.0117 468.3169 L359.125 467.8262 l359.002 467.7588 358.3594 467.4619 357.6816 468.2393 c356.8574 469.1821 357.9453 470.999 359.3848 472.376 c360.9727 473.8921 362.7832 474.1631 365.2695 473.2588 c366.7637 472.7148 368.1016 471.1899 369.0547 469.0869 c368.1699 468.6812 366.7363 468.021 YF389.8535 416.2529 m388.2471 416.3838 L389.2676 415.1348 l391.252 412.7021 393.5176 408.8652 393.9941 406.2373 c394.5586 403.1377 392.7969 400.2871 391.627 399.9229 c390.1992 399.4746 388.9248 399.8604 387.9434 401.0342 c386.7285 402.4814 385.998 406.2422 385.8184 407.5674 C385.7363 408.1768 L385.1221 408.1611 l385.083 408.1602 382.5449 408.1006 380.4004 408.1533 c382.3652 418.0693 385.5566 426.8921 387.4668 431.251 c387.9082 428.5771 388.9639 425.9009 391.3809 423.377 C393.4688 421.21 l395.3926 419.2217 396.3574 418.2227 396.8574 417.458 C396.9238 417.3604 L397.0195 417.2881 l397.1582 417.1826 397.248 417.0537 397.3379 416.9365 c396.5703 416.6094 393.3555 415.9629 389.8535 416.2529 CF*U*u1 D311.3574 391.9717 m313.2051 390.9609 314.084 391.2256 y314.4355 391.9111 314.1172 393.9307 y313.2813 393.0605 312.1055 394.0557 y312.543 392.4521 311.3574 391.9717 YF276.8369 445.624 m278.1719 445.626 L278.1719 448.1392 l278.1719 459.9839 278.127 468.5278 278.1108 470.854 C308.7227 470.854 L339.1973 470.854 l339.1816 468.5278 339.1367 459.9839 339.1367 448.1392 C339.1367 445.4399 L340.4727 445.4829 l340.4629 460.896 340.5352 471.3779 340.5352 471.5259 C340.541 472.2109 L339.8691 472.2109 L308.7227 472.2109 L276.7681 472.2109 L276.7729 471.5259 l276.7729 471.377 276.8462 461.0581 276.8369 445.624 CF332.752 407.7148 m332.752 413.1221 l332.752 413.2637 332.8301 413.5088 333.3008 413.585 c333.3105 413.5996 333.3164 413.626 333.3164 413.6631 c333.3164 413.7646 333.2773 413.9414 333.208 414.0947 c332.4902 415.4502 331.9209 417.4355 331.8887 417.5889 c331.2617 429.3662 331.2617 429.3721 v331.2617 430.4458 332.2715 431.8682 332.4639 432.1318 C332.4639 435.5151 l332.4639 435.5811 332.2842 435.6938 332.2266 435.7261 C331.2246 435.7261 l331.0449 435.7261 330.9912 435.6201 330.9912 435.6709 C330.9912 435.3799 L330.8203 435.3022 L330.3555 435.3799 L330.2031 435.4419 l330.1953 435.7778 330.0645 435.8032 V328.9063 435.728 L328.9063 434.2822 L327.2422 434.2822 L327.2422 434.6011 L327.2715 435.8032 L325.9531 435.7778 L325.9473 435.4419 L325.793 435.3799 L325.3281 435.3022 L325.1582 435.3799 L325.1729 435.5781 l325.1582 435.623 325.1035 435.7261 324.9238 435.7261 C324.0117 435.7368 l323.8682 435.6938 323.6855 435.5811 323.6855 435.5151 C323.6855 432.1201 l323.79 431.9551 324.6445 430.5928 Y323.2148 430.584 l322.7461 430.5811 322.7129 430.5029 V322.7129 429.04 L320.209 429.04 L320.209 429.3569 L320.1914 430.542 L318.1367 430.542 l317.9297 430.5088 317.9297 430.5542 V317.9297 429.04 L315.4521 429.0361 L315.4521 429.354 L315.4521 434.7949 l315.4707 435.71 316.2676 437.687 316.2773 437.6499 C316.2773 441.2261 l316.2773 441.7061 315.8027 441.8428 315.8242 441.8501 C313.6406 441.8501 l313.2988 441.8501 313.2324 441.6362 313.2266 441.5249 C313.2266 440.3618 L312.4648 440.3579 L312.4648 441.9131 l312.4648 442.1221 312.2793 442.1709 312.1914 442.1792 C310.2715 442.0742 L310.2715 440.3799 L307.7529 440.3799 L307.7529 440.6982 L307.6484 442.1792 L305.8574 442.1792 l305.7676 442.1709 305.5605 442.1318 305.5605 441.9131 C305.5605 440.3579 L304.8018 440.3618 L304.8018 441.5112 l304.793 441.6362 304.7305 441.8501 304.3848 441.8501 C302.2793 441.8579 l302.2266 441.8428 301.748 441.7061 301.748 441.2261 C301.7246 437.771 l301.7617 437.687 302.5547 435.71 302.5762 434.7949 C302.5762 429.04 L300.0957 429.04 L300.0957 429.3569 L300.1133 430.5068 l299.8867 430.542 299.8799 430.542 V297.8159 430.4819 L297.8159 429.04 L295.3179 429.04 L295.3179 429.3569 L295.2759 430.5811 L293.9531 430.5908 L293.3711 430.5752 l294.2349 431.9551 294.3398 432.1201 V294.3398 435.5151 l294.3398 435.5811 294.1572 435.6938 294.104 435.7261 C293.1021 435.7261 l292.9219 435.7261 292.8652 435.6201 292.8652 435.6709 C292.8652 435.3799 L292.6973 435.3022 L292.229 435.3799 L292.0791 435.4419 l292.0723 435.7778 291.9409 435.8032 V290.7798 435.728 L290.7798 434.2822 L289.1191 434.2822 L289.1191 434.6011 L289.146 435.8032 L287.8291 435.7759 L287.8232 435.4458 L287.6699 435.3799 L287.2051 435.2988 L287.0371 435.3799 L287.0532 435.5781 l287.0342 435.6201 286.98 435.7261 286.8008 435.7261 C285.8862 435.7368 l285.7441 435.6938 285.562 435.5811 285.562 435.5151 C285.562 432.1318 l285.7539 431.8682 286.7622 430.4492 286.7622 429.376 C286.7622 429.3521 l286.1411 417.5889 286.1289 417.5195 v286.104 417.4355 285.5313 415.4385 284.8198 414.0967 c284.7251 413.8896 284.689 413.6377 284.686 413.5928 c285.1948 413.5088 285.271 413.2637 285.271 413.1221 C285.271 407.7148 L294.6309 407.7148 L294.6309 409.3135 L299.2988 409.3135 l299.3047 409.8545 299.3516 413.3389 y299.3516 413.3408 299.3613 413.3779 299.373 413.4189 C303.1465 413.4189 L303.1465 412.3516 L302.5342 412.3516 L303.752 410.2461 L304.9707 412.3516 L304.3672 412.3516 L304.3672 413.4189 L308.2246 413.4189 L308.2246 412.3516 L307.6113 412.3516 L308.8301 410.2461 L310.0449 412.3516 L309.4453 412.3516 L309.4453 413.4189 L313.3018 413.4189 L313.3018 412.3516 L312.6895 412.3516 L313.9082 410.2461 L315.125 412.3516 L314.5195 412.3516 L314.5195 413.4189 L318.6445 413.4189 l318.668 413.335 318.6855 413.2754 318.6855 413.2666 c318.7207 409.8545 318.7285 409.3135 V323.3945 409.3135 L323.3945 407.7148 l332.752 407.7148 Lf0 D303.1465 414.6396 m299.8086 414.6396 l300.1523 415.4648 300.7227 416.5811 301.5801 417.6992 C303.1465 417.6992 l303.1465 414.6396 Lf303.1465 418.917 m302.6426 418.917 l302.7988 419.0732 302.9727 419.2236 303.1465 419.376 c303.1465 418.917 Lf308.2246 414.6396 m304.3682 414.6396 L304.3682 417.7002 L308.2246 417.7002 l308.2246 414.6396 Lf308.2246 418.917 m304.3672 418.917 L304.3672 420.3091 l305.4297 421.001 306.7129 421.5381 308.2246 421.814 c308.2246 418.917 Lf313.3018 414.6396 m309.4463 414.6396 L309.4463 417.7002 L313.3018 417.7002 l313.3018 414.6396 Lf313.3018 418.917 m309.4453 418.917 L309.4453 421.8901 l310.9502 421.667 312.2246 421.1792 313.3018 420.5361 c313.3018 418.917 Lf314.5195 419.7002 m314.832 419.4482 315.125 419.1865 315.3984 418.917 C314.5195 418.917 l314.5195 419.7002 Lf314.5195 414.6396 m314.5195 417.6992 L316.4512 417.6992 l317.2969 416.5869 317.8633 415.4736 318.209 414.6396 c314.5195 414.6396 Lf1 D315.1465 399.8271 m314.7383 400.415 313.1582 399.8506 312.7139 399.5928 C311.8145 399.4668 L311.2676 399.9893 l311.166 400.2354 311.1836 400.4893 311.3184 400.7119 c311.4844 400.9844 311.8047 401.1611 312.1836 401.1943 c312.6777 401.2334 314.3105 401.6865 314.3105 402.3936 c314.3105 402.9941 313.6797 404.1045 312.6602 404.8447 c311.6221 405.6006 310.3828 405.8818 309.8281 405.7119 c309.1445 405.501 309.1934 403.8311 309.3008 403.3301 c309.3848 402.9492 309.3047 402.5771 309.085 402.3311 c308.9102 402.1396 308.6738 402.0459 308.416 402.0732 C307.75 402.4424 L307.6152 403.3154 l307.7285 403.7979 307.8008 405.4922 307.126 405.7119 c306.5566 405.8975 305.3086 405.6357 304.2891 404.8965 c303.248 404.1396 302.5977 403.0508 302.5879 402.4717 c302.5762 401.7607 304.1992 401.2813 304.6973 401.2334 C305.498 400.8047 L305.6328 400.0635 l305.5723 399.8057 305.4082 399.6084 305.1709 399.5059 c304.877 399.3828 304.5078 399.4277 304.1885 399.626 c303.7461 399.8926 302.1738 400.4795 301.7578 399.9014 c301.4043 399.416 301.2637 398.1504 301.6523 396.9502 c302.0488 395.7295 302.8828 394.7725 303.4336 394.5869 c304.1113 394.3525 305.0566 395.7354 305.2637 396.2061 c305.4199 396.5605 305.7051 396.8154 306.0254 396.8848 c306.2773 396.9385 306.5234 396.8721 306.7148 396.6982 c306.7188 396.6963 307.0361 396.0088 y306.6348 395.2236 306.6309 395.2236 v306.3164 394.9502 305.5234 393.9756 305.5234 393.3311 c305.5234 393.2041 305.5518 393.0928 305.6211 393.001 c305.9727 392.5146 307.1348 391.9873 308.3945 391.9873 C308.4004 391.9873 l309.6797 391.9873 310.8457 392.4873 311.1953 392.9502 c311.2656 393.0459 311.2988 393.1592 311.2988 393.2881 c311.2988 393.9326 310.5293 394.9141 310.2227 395.1904 C309.8223 396.0117 l310.1484 396.6807 310.1484 396.6865 v310.3535 396.8643 310.5957 396.9268 310.8477 396.8662 c311.1572 396.7979 311.4297 396.542 311.5771 396.1924 c311.7754 395.7178 312.6953 394.3203 313.3799 394.5391 c313.9531 394.7256 314.8066 395.667 315.1973 396.8701 c315.5957 398.0869 315.4824 399.3525 315.1465 399.8271 CF0 D309.7988 397.1992 m308.7461 396.4463 307.2822 396.6924 306.5322 397.7451 c305.7832 398.7949 306.0254 400.2588 307.0811 401.0117 c308.1309 401.7607 309.5918 401.5146 310.3477 400.4619 c311.0977 399.4131 310.8516 397.9492 309.7988 397.1992 CF1 D283.666 442.3882 m284.083 442.583 284.3862 442.8921 284.5449 443.2251 c284.916 443.1611 285.4082 443.165 285.9341 443.27 c286.5391 443.3901 290.8701 445.2881 292.937 446.1899 c292.9448 446.1758 292.9551 446.167 292.9639 446.1509 c293.8628 444.8169 295.2339 443.1069 296.395 442.4502 c298.1021 441.481 298.8569 441.7881 299.1934 442.3701 c299.5254 442.9541 299.0215 443.9619 297.6641 444.644 c296.8242 445.063 295.8052 445.981 295.0161 446.9009 c295.0122 446.9053 295.0098 446.9072 295.0059 446.9131 c296.1089 447.4619 298.1938 448.4941 300.5156 449.646 c300.4355 449.6938 300.3652 449.7349 300.3203 449.7739 c300.2158 449.8579 300.1895 449.9351 300.1563 450.0649 c299.8682 450.5161 299.7598 451.0171 299.7598 451.3159 c299.7656 451.4072 299.7715 451.4971 v299.7539 451.604 299.6797 452.0542 y299.5742 452.5278 299.4414 453.1309 v296.8809 451.9741 294.5771 450.9272 293.3809 450.3838 c293.3809 450.3901 293.377 450.3931 293.377 450.3989 c293.1621 451.5928 293.0801 452.9541 293.2852 453.8662 c293.6152 455.3511 293.1519 456.3818 292.4902 456.4902 c291.8271 456.6011 291.1099 456.208 290.7798 454.2739 c290.5591 452.957 291.0322 450.8208 291.4971 449.2798 c291.5 449.271 291.5029 449.2632 291.5059 449.2559 c289.5059 448.2241 285.2832 446.0469 284.7998 445.6509 c284.3892 445.312 284.0771 444.9312 283.8911 444.604 c283.5342 444.6909 283.1021 444.6519 282.686 444.4512 c281.9082 444.085 281.498 443.3198 281.7681 442.751 c282.0371 442.1812 282.8892 442.0161 283.666 442.3882 CF295.813 462.8428 m295.6152 463.6592 294.8872 463.1689 y293.9141 464.5132 292.1362 464.9722 y291.9619 465.269 291.4912 465.5811 291.0859 465.8101 c290.897 467.1938 290.1392 468.3818 288.9209 468.9189 c287.1089 469.7261 284.9082 468.8262 283.6719 466.895 c283.5488 467.0571 283.3809 467.1938 283.1738 467.2881 c282.5771 467.5552 281.9121 467.3481 281.6782 466.8252 c281.4492 466.3071 281.7402 465.6709 282.334 465.4072 c282.5449 465.313 282.7578 465.2842 282.9609 465.2988 c282.355 463.0918 283.1621 460.8511 284.9771 460.0439 c286.1909 459.501 287.5801 459.7319 288.7378 460.521 c289.1758 460.3779 289.7251 460.2329 290.061 460.3062 c291.5942 459.292 293.2402 459.4692 v293.3652 458.5991 294.106 458.9971 v295.1841 457.6011 296.8179 458.041 v297.3301 457.8311 298.209 457.4722 v298.3442 457.854 298.5449 458.4312 298.5488 458.4341 c299.2051 459.2202 299.8799 459.8701 300.5488 460.4131 c299.1572 461.0762 298.3418 461.4702 y297.5762 462.978 295.813 462.8428 YF0 D288.3389 464.3452 m287.832 464.4141 287.5322 465.3169 288.1021 465.707 c287.0488 466.3579 286.9141 464.978 v286.1548 465.6489 285.459 465.1641 v285.564 464.3242 286.5752 464.21 y285.6401 463.188 286.8271 462.8428 y286.7368 463.5229 287.604 463.9038 287.9971 463.5771 c288.3931 463.251 288.1201 462.354 287.6348 461.8862 c287.0791 461.3491 286.2329 461.2383 285.6191 461.5151 c284.4902 462.0122 284.167 463.751 284.8979 465.3921 c285.627 467.0381 287.1372 467.96 288.2642 467.458 c288.8569 467.1938 289.3052 466.4629 289.3408 465.7368 c289.373 465.062 288.8462 464.2729 288.3389 464.3452 CF1 D317.3633 458.437 m317.459 458.167 l325.2871 462.0649 332.1309 465.4741 332.749 465.771 c334.2539 466.481 335.1504 468.1362 y333.2979 468.4868 331.7988 467.7729 v331.1563 467.4712 323.7002 464.103 315.377 460.3452 c316.0791 459.7798 316.7539 459.165 317.3633 458.437 CF383.7266 386.7061 m382.4102 387.8623 380.1016 389.0146 378.7852 390.4951 c378.2891 391.0508 376.4658 391.7021 374.2588 392.3564 c374.2109 392.3799 374.1543 392.417 374.1074 392.4346 c373.5723 392.6514 372.5342 392.9521 371.3613 393.2676 c371.9668 391.6914 374.5586 389.5332 375.8418 388.6006 c376.7178 387.9658 376.4785 387.3311 376.3184 387.0127 c375.207 388.0479 373.8555 387.9658 v372.5039 387.8877 371.1572 388.3643 369.25 387.251 c367.3457 386.1377 366.2871 385.5928 365.9121 384.2334 c365.6748 383.3594 365.5156 382.7236 y364.166 384.3135 364.0879 385.3447 v361.2266 387.1729 359.6367 387.3311 v358.0508 387.4873 356.1465 386.9346 355.9844 386.0615 c355.7861 387.7686 356.8574 388.8408 v357.334 389.3174 358.1318 389.9521 y357.2559 390.667 356.7012 390.1094 v356.8574 391.7803 357.6523 391.8594 v358.4453 391.9385 361.9395 391.9385 363.2129 391.9385 c364.4844 391.9385 366.9453 392.415 367.502 393.9248 c367.5342 394.0156 367.5645 394.1221 367.5918 394.2422 c366.9883 394.3965 366.4551 394.5332 366.0918 394.6357 c365.3242 394.8691 364.6885 395.0869 364.2861 395.2744 c361.8145 396.4287 357.3672 396.5928 354.8965 396.7588 C354.1758 396.9678 L354.1465 402.2627 L353.459 402.3311 l350.2461 402.6553 345.873 402.2373 343.0391 400.2158 C342.8867 400.2607 L342.875 400.2559 l340.7178 400.876 338.3301 401.2764 334.7949 402.1934 c334.707 402.2178 333.8281 402.4971 333.2285 402.6807 c336.7227 407.2119 339.4082 412.8076 340.2529 419.6162 C338.8945 419.5918 l336.1445 398.4268 314.9395 389.4326 308.7188 388.0557 c302.335 389.4688 280.229 398.8447 278.2559 421.0151 C276.9209 421.0151 l277.5859 413.2783 280.5981 407.0371 284.5723 402.1084 c281.4878 401.6621 277.332 400.7432 275.811 400.3818 c275.229 400.2432 274.7461 400.0742 274.291 399.8975 c274.2212 399.876 274.1372 399.8486 274.063 399.8271 c271.5659 402.4619 266.5879 403.3076 262.8911 402.7627 C262.2358 402.667 L262.2002 396.2354 l259.543 396.1289 256.9941 396.1924 255.875 396.1006 c254.8188 396.0107 253.0698 395.2686 251.436 394.542 c252.1108 394.1689 253.1309 393.9365 254.0078 393.9365 c259.6719 393.8506 259.6748 393.8506 v260.9121 393.7275 261.4771 392.3643 261.5918 391.1318 c261.6709 390.2764 261.748 389.4482 v262.1348 388.6416 262.3291 387.8291 262.3291 387.3271 c262.3291 387.085 262.312 386.917 262.3052 386.8594 C261.6758 385.0088 L260.2271 386.666 l260.0313 386.9111 258.8931 387.3018 257.689 387.1836 c256.8081 387.0947 255.1152 386.21 254.0391 385.5557 c253.6831 384.3994 252.7461 383.2119 252.5249 382.9502 C251.188 381.3887 L250.2729 384.8701 l250.0488 385.6846 249.4512 386.0693 247.7539 387.0557 C247.4312 387.2451 l246.2832 387.9131 245.438 387.873 244.46 387.8281 c243.3032 387.8154 243.3008 387.8154 v242.5869 387.8584 241.854 387.3438 241.6289 387.1436 C240.5742 386.1885 L239.9409 387.4531 l239.3999 388.5361 239.7031 389.6357 240.7461 390.3926 c241.3081 390.7998 241.8809 391.2627 242.4189 391.7354 c242.29 391.7061 242.1519 391.6748 242.0361 391.6514 c240.3872 391.3223 236.4341 388.8486 234.127 388.0264 c231.8198 387.2021 228.3589 385.3877 228.5249 384.2373 c228.689 383.083 231.2002 378.915 234.166 378.0898 c234.5352 377.9873 234.8652 377.9092 235.1841 377.8379 C235.1841 380.335 L251.188 380.335 l259.8818 382.0986 269.3198 385.3027 270.1479 389.5693 c267.1548 391.167 263.7642 390.8662 V263.7642 396.4365 l263.7539 396.4326 263.748 396.4316 263.7378 396.4287 c263.7451 397.5234 263.7598 400.4014 263.7661 401.2891 c266.646 401.5654 270.2622 400.9795 272.377 399.292 c272.4219 399.2568 272.458 399.2158 272.5 399.1826 c272.748 398.8818 273.7422 397.6387 273.7422 396.8525 C273.7422 381.2881 l273.5742 380.8799 273.1919 380.335 V283.8281 380.335 L283.8281 380.3564 L342.4844 380.3564 L342.4453 380.4268 L342.7324 380.335 L343.1914 380.335 l342.8135 380.8799 342.6445 381.2881 Y342.6445 396.8525 l342.6445 397.3301 343.0059 397.9688 343.3516 398.4697 c345.4414 400.3994 349.3145 401.0459 352.6191 400.8369 c352.6221 400.2178 352.6309 398.6768 352.6367 397.4189 C352.6191 397.4229 L352.6191 390.8662 l349.2266 391.167 346.2324 389.5693 y347.0645 385.3027 356.5029 382.0986 365.1973 380.335 C381.0664 380.335 L381.0664 376.6162 l381.4805 376.8486 381.8535 377.0967 382.1465 377.3623 C382.1465 377.3545 l384.168 378.3975 385.8242 381.1572 386.2168 382.4072 c386.7109 383.9795 385.0469 385.5547 383.7266 386.7061 CF334.6328 442.2109 m335.0039 442.3428 335.4238 442.7412 335.4785 442.9028 c335.5352 443.0708 335.5801 443.6318 335.4297 444.001 c334.4766 446.3408 331.3848 446.374 y330.9785 447.0132 330.1582 446.665 y327.7041 449.106 324.7168 449.6611 y323.9316 450.6719 322.9385 450.1162 y320.7998 451.0562 318.6074 452.0361 316.4473 453.0151 c316.3613 452.6118 316.2441 452.0781 316.2441 452.0752 c316.2139 451.917 316.1689 451.8022 316.1328 451.665 c316.1426 451.563 316.1543 451.353 y316.1543 450.9658 316.0732 450.4521 315.7793 450.019 c317.7715 449.147 319.7773 448.2612 321.7246 447.3818 c321.9766 446.2778 323.2559 446.3682 v325.6699 444.5229 329.126 444.3369 v329.4102 443.4951 330.1582 443.6201 v332.2539 441.3472 334.6328 442.2109 VF302.5586 394.1221 m302.166 392.0557 302.6895 391.2998 y303.4521 391.1768 305.2695 392.1064 y304.1895 392.6348 304.7695 394.0557 y303.377 393.1455 302.5586 394.1221 YF308.4385 405.3447 m309.0313 406.8994 310.2695 406.5908 y309.373 408.4951 308.5029 408.7979 y307.8135 408.4502 306.8887 406.6289 y308.0742 406.8389 308.4385 405.3447 YF299.2412 402.1631 m299.3574 401.3984 300.8047 399.9521 y300.9727 401.1465 302.5039 401.0322 y301.2051 402.0762 301.8828 403.1592 y299.7959 402.8965 299.2412 402.1631 YF316.124 399.6768 m317.6563 401.1201 317.6777 402.0371 y317.1348 402.5859 315.1162 402.9033 y315.6797 401.8389 314.373 401.0293 y316.0371 400.9521 316.124 399.6768 YF299.5469 457.603 m299.4238 457.4531 299.2988 457.0601 299.4961 456.8389 c299.6934 456.6162 299.8164 456.5649 300.0156 456.3701 c300.21 456.1729 300.8008 452.7588 300.9238 452.4111 c301.0498 452.0659 301.0742 451.5708 y300.9961 450.938 301.2441 450.687 v301.4414 450.4893 301.8359 450.5161 301.9102 450.3901 c301.9824 450.2671 301.959 450.0962 302.502 450.2192 c303.0449 450.3418 305.248 451.188 307.957 451.1821 c310.6719 451.1689 312.8691 450.3418 313.4102 450.2192 c313.9531 450.0962 313.9297 450.2671 314.0039 450.3901 c314.0781 450.5161 314.4707 450.4893 314.6699 450.687 c314.918 450.938 314.8398 451.5708 y314.8633 452.0659 314.9863 452.4111 v315.1094 452.7588 315.7012 456.1729 315.8984 456.3701 c316.0977 456.5649 316.2207 456.6162 316.418 456.8389 c316.6133 457.0601 316.4922 457.4531 316.3672 457.603 c313.8027 460.6748 310.6201 461.6899 308.5117 461.916 C308.1973 462.624 L309.0156 462.2432 L309.0156 463.46 L308.1973 463.0981 L308.5684 463.9111 L307.3457 463.9111 L307.7412 463.0791 L306.8984 463.46 L306.8984 462.2432 L307.7412 462.6392 L307.4258 461.9609 l305.3184 461.8643 302.1172 460.687 299.5469 457.603 CF0 D308.3535 456.8618 m308.9619 458.0532 L308.4785 458.0532 l308.7734 458.7041 309.1602 459.6221 309.2285 459.792 c309.3008 459.9902 309.5469 460.1382 309.9395 459.9902 c310.332 459.8428 313.1816 458.9502 314.4473 456.9609 c314.6182 456.688 314.0273 454.9761 313.3135 454.7021 c312.5977 454.4331 311.6641 454.769 311.6484 455.0898 c311.6279 455.645 312.4922 455.9331 312.9023 455.4429 c313.4121 456.4761 312.123 456.478 v312.6836 457.2402 312.1709 457.8428 v311.4023 457.6689 311.3848 456.728 y310.3301 457.4399 310.1406 456.373 y310.7637 456.5171 311.2285 455.7471 310.9824 455.3389 c310.9043 455.21 310.7432 454.9419 309.7988 455.0298 c309.5254 455.0542 309.127 455.1382 308.7813 455.3062 C308.3535 456.1602 L309.6973 455.605 L309.6973 457.394 l308.3535 456.8618 Lf307.5996 456.832 m306.2207 457.394 L306.2207 455.605 L307.5996 456.188 L307.1445 455.3091 l306.7969 455.1411 306.3926 455.0542 306.1152 455.0298 c305.1709 454.9419 305.0088 455.21 304.9316 455.3389 c304.6816 455.7471 305.1504 456.5171 305.7734 456.373 c305.584 457.4399 304.5293 456.728 v304.5117 457.957 303.7402 458.1309 v303.2324 457.5278 303.7881 456.478 y302.498 456.4761 303.0117 455.4429 y303.4189 455.9331 304.2891 455.645 304.2656 455.0898 c304.25 454.769 303.3145 454.4331 302.6016 454.7021 c301.8867 454.9761 301.2959 456.688 301.4668 456.9609 c302.7324 458.9502 305.5781 459.8428 305.9746 459.9902 c306.3711 460.1382 306.6162 459.9902 306.6885 459.792 c306.7578 459.6221 307.1406 458.7041 307.4385 458.0532 C306.9551 458.0532 l307.5996 456.832 Lf*U*u1 D1 XR221.9678 349.209 m224.5898 346.5986 L227.0122 351.582 L226.9829 351.6113 l221.9678 349.209 Lf320.1816 319.9043 m316.7578 319.5566 L317.1641 315.5566 L320.5869 315.9043 l321.9785 316.0449 322.6748 316.7188 322.5293 318.1523 c322.3906 319.5244 321.5732 320.0449 320.1816 319.9043 CF280.3301 322.834 m277.5952 323.5225 275.98 321.4531 275.3711 319.0293 c274.7891 316.7207 275.2319 314.1348 277.9668 313.4463 c280.7012 312.7588 282.3149 314.8271 282.896 317.1348 c283.5068 319.5586 283.064 322.1465 280.3301 322.834 CF307.9688 563.4409 m235.896 563.4409 177.4692 505.0151 177.4692 432.9409 c177.4692 360.8682 235.896 302.4414 307.9688 302.4414 c380.042 302.4414 438.4688 360.8682 438.4688 432.9409 c438.4688 505.0151 380.042 563.4409 307.9688 563.4409 CF0 D222.043 341.3457 m223.521 344.3613 L219.7358 348.1289 L216.6992 346.666 L214.4448 348.9102 L228.3608 355.2051 L230.6431 352.9336 L224.353 339.0459 l222.043 341.3457 Lf230.9429 333.3955 m227.4531 336.1055 227.4258 340.3066 229.9531 343.5605 c232.5552 346.9082 236.6328 347.918 240.123 345.2061 c242.603 343.2793 243.5591 340.2051 241.833 337.3672 C239.4341 339.2324 l240.146 340.4766 239.7339 342.1641 238.5039 343.1211 c236.2769 344.8516 233.9668 343.6074 232.4341 341.6338 c230.9731 339.7539 230.3359 337.209 232.563 335.4795 c234.0791 334.3008 235.7422 334.6797 237.085 336.0176 C239.4858 334.1514 l237.0488 331.5371 233.707 331.2461 230.9429 333.3955 CF253.8501 332.5859 m250.189 334.8047 L244.1563 324.8496 L241.4712 326.4766 L247.5039 336.4316 L243.8442 338.6504 L245.2119 340.9082 L255.2192 334.8438 l253.8501 332.5859 Lf271.124 322.8574 m268.334 323.9609 l268.5801 325.5615 267.7832 326.7578 266.4072 327.3018 c263.7842 328.3379 261.916 326.4961 260.998 324.1699 c260.123 321.957 260.228 319.3359 262.8501 318.2988 c264.7471 317.5498 266.249 318.1387 267.145 319.9141 C264.2051 321.0752 L265.064 323.252 L270.645 321.0469 L267.8091 313.8672 L265.9482 314.6016 L266.2461 316.2266 l264.7012 315.3105 263.1641 315.3359 261.8809 315.8438 c257.77 317.4678 256.564 321.4922 258.0781 325.3242 c259.6362 329.2676 263.2661 331.3809 267.377 329.7578 c270.0928 328.6836 271.998 325.9961 271.124 322.8574 CF285.9409 316.3691 m284.936 312.373 281.6089 309.8076 277.3223 310.8867 c273.0361 311.9648 271.3198 315.7998 272.3262 319.7949 c273.3608 323.9063 276.688 326.4727 280.9741 325.3955 c285.2598 324.3145 286.9771 320.4795 285.9409 316.3691 CF293.9082 308.2031 m290.396 308.6504 L287.6011 323.4033 L290.814 322.9932 L292.6992 312.6318 L292.7378 312.626 L297.2031 322.1777 L300.417 321.7676 l293.9082 308.2031 Lf311.0547 315.9248 m311.0137 313.4844 L304.0938 313.6016 L304.0352 310.1016 L311.7344 309.9727 L311.6895 307.333 L300.8516 307.5156 L301.0918 321.793 L311.7695 321.6133 L311.7266 318.9746 L304.1885 319.0996 L304.1348 316.041 l311.0547 315.9248 Lf323.9414 308.3848 m323.4746 309.2412 323.374 310.6182 323.0996 311.7363 c322.7285 313.2061 322.0859 313.8047 320.5137 313.6465 C317.3906 313.3281 L317.9531 307.7773 L314.8291 307.459 L313.3887 321.667 L321.0488 322.4443 l323.5957 322.7021 325.3867 321.0957 325.6035 318.9453 c325.7734 317.2754 325.2266 315.9531 323.7178 315.1563 C323.7227 315.1172 l325.2949 314.874 325.8838 313.4258 326.1279 312.0039 c326.2793 311.1133 326.4297 309.4414 327.0664 308.7012 c323.9414 308.3848 Lf338.8574 311.2422 m330.9229 319.2246 L330.8838 319.2158 L333.0313 309.9004 L330.166 309.2402 L326.958 323.1543 L329.999 323.8555 L337.958 315.8594 L337.9971 315.8682 L335.8457 325.2031 L338.7109 325.8633 L341.917 311.9482 l338.8574 311.2422 Lf357.1797 317.3926 m353.5586 326.8438 L353.5215 326.8291 L353.874 316.127 L351.6133 315.2607 L344.7617 323.3652 L344.7246 323.3516 L348.3086 313.9941 L345.5635 312.9424 L340.4541 326.2773 L344.5811 327.8584 L351.2139 319.8848 L351.251 319.8975 L350.6885 330.1982 L354.8145 331.7793 L359.9238 318.4453 l357.1797 317.3926 Lf363.2861 320.1768 m356.4922 332.7383 L365.8867 337.8184 L367.1426 335.4961 L360.5098 331.9092 L361.9658 329.2178 L368.0527 332.5098 L369.2129 330.3633 L363.127 327.0703 L364.792 323.9922 L371.5645 327.6563 L372.8203 325.334 l363.2861 320.1768 Lf382.7773 332.1045 m372.415 336.4941 L372.3828 336.4717 L377.8906 328.6582 L375.4883 326.9648 L367.2598 338.6348 L369.8105 340.4336 L380.2012 336.0371 L380.2344 336.0605 L374.7129 343.8906 L377.1162 345.584 L385.3457 333.9131 l382.7773 332.1045 Lf390.6094 338.4385 m382.8418 347.1055 L379.6543 344.25 L377.8926 346.2168 L386.6055 354.0234 L388.3682 352.0586 L385.1816 349.2012 L392.9482 340.5322 l390.6094 338.4385 Lf307.9688 327.873 m249.9409 327.873 202.8999 374.9141 202.8999 432.9419 c202.8999 490.9702 249.9409 538.0098 307.9688 538.0098 c365.9971 538.0098 413.0371 490.9702 413.0371 432.9419 c413.0371 374.9141 365.9971 327.873 307.9688 327.873 CF*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF